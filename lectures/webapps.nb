(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    198924,       3969]
NotebookOptionsPosition[    188581,       3700]
NotebookOutlinePosition[    188937,       3716]
CellTagsIndexPosition[    188894,       3713]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CloudDeploy", "Title",
 CellChangeTimes->{{3.683612317044907*^9, 
  3.683612320586447*^9}},ExpressionUUID->"2bae174d-9e35-4688-b14f-\
b8e2aa248c0d"],

Cell[CellGroupData[{

Cell["Deploy an Expression", "Subchapter",
 CellChangeTimes->{{3.7071357072303057`*^9, 
  3.707135713273736*^9}},ExpressionUUID->"517f7ef2-103c-4640-8a67-\
7ae12fc61efc"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.683612385912169*^9, 
  3.6836123883037*^9}},ExpressionUUID->"7b42d1af-e04d-47f8-ad04-610f2ffad2c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploy an Image", "Subchapter",
 CellChangeTimes->{{3.707135717123473*^9, 
  3.7071357201616488`*^9}},ExpressionUUID->"ccae1eb8-39c3-4f0e-89e6-\
5152227c0cc0"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<TestImage\>\"", ",", "\"\<Lena\>\""}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6836124191117363`*^9, 
  3.683612439151309*^9}},ExpressionUUID->"cfbfc038-590b-4d06-bc54-\
d9300b0d7eb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploy a manipulate", "Subchapter",
 CellChangeTimes->{{3.707135717123473*^9, 
  3.707135731272629*^9}},ExpressionUUID->"4d9e24e8-988a-4295-86b6-\
d3af78455cc0"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Factor", "[", 
     RowBox[{
      RowBox[{
       InterpretationBox["x",
        ToExpression["x"]], "^", "n"}], "+", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10", ",", "100", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"f1ed8a43-9013-44cb-8e7f-ef841248ace4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploy a form", "Subchapter",
 CellChangeTimes->{{3.707135717123473*^9, 
  3.7071357373201933`*^9}},ExpressionUUID->"e1a56e71-5b13-4a9e-8653-\
090b6c1d63bb"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"FormFunction", "[", 
   RowBox[{
    RowBox[{"\"\<addresses\>\"", "\[Rule]", 
     RowBox[{"RepeatingElement", "[", 
      RowBox[{"\"\<StreetAddress\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"GeoGraphics", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"GeoMarker", "/@", "#addresses"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"TravelDirections", "[", "#addresses", "]"}], "]"}], ",", 
          "Thick", ",", "Red"}], "]"}]}], "]"}], "]"}], "&"}], ",", 
    RowBox[{"AppearanceRules", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{
      "\"\<Title\>\"", "\[Rule]", 
       "\"\<Get travel directions for your trip\>\""}], "|>"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.683612576438101*^9, 
  3.683612576440916*^9}},ExpressionUUID->"3566f5c8-6d5d-461e-ac5c-\
4d9c318a1711"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploy a static asset", "Subchapter",
 CellChangeTimes->{{3.707135717123473*^9, 
  3.7071357477194777`*^9}},ExpressionUUID->"d6619ae2-59f7-4bb9-b05b-\
5e85bfad03c9"],

Cell[BoxData[
 RowBox[{"CloudExport", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxsvAeTJEl6pgcz/hL+FtLIA0kD7HAgDgfuHYDFqtnZmeke0TPTsrTMyqyU
lVprHTIjUstIXSplVc/MLo5/gD+B7+eRWd2zt2Zfu3l4RkRGRjzf66+7R/X/
/Msv/u6X/9Nf/dVfhfDv/8M/ql/frlfrH+7m729n71frn6Z37xGTu/eD6ft6
fy21l9Hy0qcsvcrKp678eihrvRIur7I12iGgoHEZUZfd0cPk9mF0vZ7cPPQn
q/F0NZyueqNls7+sdGbl9r3cuJca90rzXm3PlNas0Vsgat1FQ1u2+qtqZ6l2
FrXecjBZt4crvjEr1GZSY6a253W2Z6k1y1Xv4+V5vLxAJCrzeGWBiFE5x2ai
SpGsLhDpGkWqOk9RC0VqW6ar80x1hsjW6DLa2qzXv2trdG3F2j1XuyvU7oT6
Hepp2n+Rwnlqy5/HipXrbayS1LJK1deZxjrbeCh1H2/uf3p8+NP13Y/N4WNr
+Di+eb9eo+Wn67v33eFDe7Bu9teN/qreW1V7q0p3VdNWNVR6a6X7wLUf863H
Yvux2HnkO49i71Hqvpe7j2rvodx7wD5qdy11Hii6j1XtQe0+VPuPN7Mf6Sse
//j+/Z9mix/ni5/++7//v+v1H7XxQ2f0eDv7abX+4+P7f398/6fl6o9oX6B8
+BNivvxJm/7QGDwiav0HnLA5fN8aPdZ660pvVe6uqtp6cvt+evs4uXnsjekC
5M5KbK+F9kpoL4XWqthaF1oPBb1srvNUWRWaq3xjWWgs+OZC7cwbPcSi3FlI
zTnXmOfri0IdlUWBhdCYI/CR3Foo7UWpPUeJTZ72wUdoWdS1VXOw6oxWqGA3
rj7LV2bZyj04QZ2rz69vH67vHqa3D4MpYq1N1p3hSo/2cA2k+eYyUl4E1GVQ
XUXKYHgZrawSlVWyusKvwI/F9eRqy1x9ma8vsVnXltXugvDTFq3+oj1AOW9o
8zJ4bs0qbcB5X2reiwC7ed8ZLJraotKZI0A4cBXqM7E5L3UWYhMwgy66TrkJ
6ub4lGvcZyr34DZZmedq80IDZBLJoLTYXJQ6y85wXe4ts/VFkghkPG+R/jjS
LLK1OW7y9Hpxc7sYT+facNboItHuq517pB4uT27N8vW5nhfp2jK9pTpdX+mR
qusMLxHYLDbxcFf1wUNv8rhc//HHH//7+v2/g7Hh9ePg+v3q4U/A7G7+44g2
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
9dA3PzYM29jwLHX0oMkHpqizJ//wF41rqftkCeZPI7K/ZInvZMYwK+/Yavhd
6QON9+VtWe7pQ0KaJylvW8rdDdgqOP9QblBnJLPdCNdZVeeZ6vNt/aPoL6qM
Z6oMFvXhojlcNkek0i0aAz7QGJBKUuw6o7rBXnv+CGmKjRQPHxj2j3rUho8M
Y5pPRskSgeRdl3QS+Q9w6kNIRjIr8alO+1NU/mLQeuLWYGj6K6kPOs+6q69u
JxiZO9Jfk9uM5tSu/jcjG2LV7ShPYX8GQlNDLYZxa/NG/ZNR0Un+GHVlO6ct
tzbln8nvE7qcPrurE0sjuI2z1Ydpm9HZxi180NWNIHc+FuQNw5up196S1ecS
7fnnnuEj4f1LZrX9P7R0KZ5mD5SPwN5WnnwCMxJbWVa2JWMSPLNZuLZOOwXV
27eyPjvXvhVbH4Jv3hTqN4XaTa56IzRupOYNX7vOlqdc9ZqrTfPVaQ6Vxq3Y
vFM7d1VaYaSSY3uKDTqw0r0bjGb90azZu5MaN5X27XQ6n90ubq/no/Hs+npx
e7PURnMMCZvjbZD8MrkekpHWqYY4s3Kj3k88M6S3jWCb3tN43KTAxrFsZvYI
6cFaN9i6XD/x/AHdjT//cEhlgzrTeUYsZYq+qkKx6QU+jF61pdrTXySef4jt
lKzCOFcZ5xsv97Ts0tnspteftHo7uafPb/9sjWZrg+dMcp9Ud6Yj/QHaTac/
+/nA7V43uhueGcbSVpOlbf2JZ7lLs69yb0llV5+V1WPOpik272BsFgEbFMVt
SSvRbKKMpjiad2y3O357CNvtLo+o37E3iPDRnT65IbZZ0OYGyErnttFj0b1t
9m7l5rVQmxYq42JlklHHydIkXhrHZIp4aZJSEONEaZSQR6nSGGVMGsYpRil5
WG2Mi+ooUxqmxEGpMioqw4Q4DPHDuDjk1FG7Mxn3r2/GN9ej6057cj28aTTH
5er4dnSzoL8+ul1Mbya98Xxy83B793h9i/LH+9kPd/fL6e2MjrobjRc00UFI
P2yRpoVCPWpDPXSJXm0lGkpOlmPL88MT27WtCdd5rv48niZMPtZhkll9Z91y
fET1E89MpZ8I32C84bm/eTGeBob0pyh/DrP++hn7+z6aq1d0gLeIboCnyuyD
erdnT7Q/qbcuzgh4Xe6jOQehvWBBlafJB31z42m3bnbL+Vz/9COelyw2Isxs
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
vvzy69fms1OH6SJsN6dc1pjN5DWdgXKv8cx6emw/PXUZL+wGk/XceH5qenNg
fnfi2D11HF64j0zeN+e+l+eB14bg3mXonTH4xhh+Y4y8MoRfXYRfGyOvLyJv
jdF3l7E9cxyxb47tmGIH5vihJXZgQWNs5zK6dxnZN1NQ3RzdMUX3LyOH5sge
fRTdNUWweWyJnttil1dxiytmdsZsrjh8lMufsnuTV76U059y+dPeYMYTTPtC
mVA0G45mo/FsIJy2uWOXzojBFjyz+I4vfUZHyOyKWN1Rhy/m8ic8gYTTG7Vc
oSVh96VcwbQ3lPaEMt5w2ulHS8LlT7qDSV847QtnKCKZYCwbiqNEiuHbY8ar
0JHZe2RyH5tcZoffZEPddXLpMdn92LReBW3OoOUqYPdEPaF0OssViuggpHSq
kEzCXOWdwawrlAvF8rFkMZkuxlIcIprk/NHCVSjvjhT8MQ6QB+OshMdDS7QA
CxSIUvfnjyKzuEiCC8SKviht6iU+DVIuo0NBz5LzhbK+YMYfzPiCaX8IZcYT
yLj9abcv7fajp8t6cBn+zJWPOj74zIurtNGZQcB8mpxZM7OgFnfW6sld2BPH
prDdm3cFKCncgSJazm1Jq69o9cHIFeESUaL+3z4//Y+/OfqbXx39p98c/+LT
s999ZXj57vLo1HZwZPa7vGGvL+T2Wkz2/aPLL1+d/eHF8YvXp693zl6+PXn1
9vT1u7Pd/fM3O6eIr74/+v1Xe19+d3BwaLy4sB6fWd4cmj/57vRfnh38x1+/
+o//9uLv/vX53//y2d/81y/++p8+/+v/8vnf/fMX//b7F19+8+otDt4/sJ0e
g2HH+anfdB6xm2KOy6zbkrJdKE7jXdrdjzkErzlkOpW8ZjVgLQesStARdZj9
FmPMaXVbLO92z755ffq7r/f/6x92//mzvd9+efDZt6effnf+6Uvj1zvWF3u2
V0eOE6Pn9NJ3ZPQem3ynl36DxW8wU33/wnNk9BybAkZr0GANHBr9x5eIwJkl
gM0La/DSFrywBc2OkNURtDtDFkfQbA9eWAPnFj8y68iEw92HF56TS2S68/DM
tnNk+Pbd0TdvD75+s/ftm4Nv3+x/82b/+52jt/unB0dnJoPxwmA8PbvYPTx7
d3C6f3S+c3j+dv/s5d7520PD/pFh//ji9Ozy/Ny0d2Q8OLncOzHtHBv3Tozv
ji52sfPR+buDs90jw97x+fGZ8eTsAuXhmRFfuntMsXd8sXts3D2+2DtGu9lg
tNnsbp8vFI8lC4lUOZspJlN+PFh/LBRKwCu6/TGnL+7wxpBuFnfU7I5ZPXHk
VDCSQWJ6CMV0IJSMRtPRSBJHIUfsnpid9o9d+RJ+JF2Igowidg6D2JTTl7zy
JhB2d9ztjXsDCS+y2BdHiXB5Yg533OFBPenzJ3z+pAdfF0xGQ8lQMOXxp/zB
tMOTtLiSVlcCYnJhjx0YfK8PnaarpOkqZXCkTiBKhuCFPY5c8AZgHnJ+9GWB
vMuX+/zbs189O/n185NPvjr+7fPjo6NLm9V5em42nJu9Tpff4/E4XVdXLqPJ
Ync4n786/f7NycUZ7IHt6Oji9NTkunLabQ6L2XZlsb/dOf/m1dF3b05Oz0zf
vjv9T7/67n/7z5/97S8++8Wvvvi3T57/8vdf/uH5t599+d2nX7z4/Mvv//WT
r3/xm+f/8slXXzz/7vXLN4d7+29evzvc3T3Z3zvaP3j3duftm92vvnlzvn8Y
s1zIwSveZ/WZzjifpR51/lBO/KmRbWeDnM8+QdftsOy+3nv22YtPf/vlV598
/c0fvnn91fd7L18jTX77hxf/8K/P/uFfnv3iV1/9/ouXz755+/vnL7/45s3X
L3dfvdnb3dlH7O/sn+wfHO4fH54Y3u2f7h+bzk1XZ0anyepBX+PzBgO+EOrn
l+5Lmwe/+MToPDVenRispkuby+5w28z7+4ffvt598erdm3d7x4dHuImHB4dv
dvZevdt9+Wbv+zc7qL/Z2TecG9wOezrojXquPA6b5fLS77QVI16PzWK5uDg7
OTUazl0W0+nJKTZNhnOL0Zhw20IOy/nJ6cHhyd7+0f7+8cnx6SkIPjfYL80e
uy3sdISdduSIy2a3m81m0+WFwURHG4xHJ4bj0wuH3W63WE1Gs+Hi8uzCYrQ4
zDaX0+k7v3SdXiINrw4urvYNVwazy2x1OV1eiw2/zn5stOPHXVqd55fOM5PD
eGm9vLRazFaj8fL49Hzv6Oz4zHBwcnZwYjg1XJ5emM+N1nOTHbbRdOkwW64c
dje+wnEVOLv0Wh2wl36jxW+y+iyOgMcdcjkDPk/I7Qr5POEoupxogk8mEaVU
Uk4kfK6QF3fIE7FiZOeOON2RK1cYrmDvEJfgdTjDBkvg4Ny1d+65sEfMV1Gb
K+ZwJTBqu3In3L7k598e/ub53q+f7f7y07dfvdjb2zt9u3P0xVcvd9+8PdzZ
OTnY/+zZ17/59It//s0ffvP75//2+y8/e/7i2Tevv3+9/3r35LvXB9j5+Xe7
336/ewi12T39+uXhr5/v/ONvvv3bf372f/0Twfxffoljn/3q91/+6++e/8vv
nn3y+TefPfvmmxevX7169+LFq08+e/HrT7/+Cptvdr558QoP7HBn99Xrd29f
vXv9avfd653zo5PT43O/w9GU8il4cb83H/KXs3EpFvA7r452Dx0Gw7u9s0+e
vfvm69c7L3BZe9++eGM1XMR97lzIG3XZT/Z33756+ez515989tWvf0/x20+/
RP3Zly+++ubbg513xqN9t+H48nD3aOfd/jtk0K7j7Bj9hfHkxGEyem1mn81i
v7yEWr47gu4Zdg5Okd1etzsdjypCnodueRwRt+3ScHp0sG88PTafHzvNF26b
yWoCpcf7Bwev3+0cAvKjo/2jo6PTM3Rg5+fnp2fnZ2cGs4l2Oz89NRsNp8fH
BwdHJ0fH+MBoMJydnNjNJq/D5nNYTOdne/u423vv9g7PTs8NOPbk/BJ4GS+8
dgudyGC4vDThtDt7+3sHByfHR4eHB2cnRy7zRdxtCTkuw1dm56Xh5OQYZ7Zd
mqzoJc7OzRdUgn6b6cJyQeXpyQml0oXh+Pjk5OT09OTsymoNuR24hpDbzif8
UsIXsJtdVjM2A05r4MqKrEyHvXGA6HbEfM500JMMeGJ+L7i02dxup99uc18Y
r84unIZL16XFHfSFk8FowAOeg0FvOAGkI/F0OJYKxbKReMQXDsFUheLxQDTi
j/hdQZvNZ7F6D47N3749e7138fbQvHeGNPTuI4y+Q5Pv5DJwcuk/MwctjvDL
lzu7b/b2dw7fvtp592rnYPfwy6++e/XtS8PhvuV4P+OxJFyW08O9zz5//ttP
PvvFL3/36999/qvffv79i5e77/a+/fp73OL9tzuvvgOfu9++ePvF89f/+Muv
/vd/+MP/8Y9f/Id/+Oyv//Mf/pe///Rv/+mzv/vF5//3P3/+//zq2Sd/+Bo8
f/L5158+e/H865fPvnr5/OtXv3/27e+/+Pb1q7cOoyHhc4IAG+7y0bHXbORi
gbMz06uX+xfnpsMjw87uKToOq+XKYrIajPYXr0+ev9j/3fOdT794fXp05jKb
Dw9O8EPcdns8GKhz6Zu6OK1jPJ/wWg1vX3//3Xf/P4vuGdxWduZ5f1mPg7ql
lkRJzDnnnHNOIEiABJFzuLjIOedE5EwSBAkwZ1E5tlKrc7C72z22x217PJ4Z
v7Nbu7PvW7VV+22r3qOuZZ26Oji64BUufuf//B4ICrVKoVDIgbuDTaVUqsBB
rlBqNeBHDY5Wo8FhNnrt5pjHHvM4Yh5nDMAZcK8HAJfWFddKwB8IBkMbicT+
7s7x4f7+3u5OOr2bSp0c7OylNg9TifR67Ci1frKzebidPNrZOtrZjIRDfvAs
vx/wYbRY7D+BveJeAUHucK7YwB8up9sFtrIVMGizAhjtZovF+tNDk9liNJns
dvDywVkOvdHw7k4bDTqjUWswagxgYtAadFq9Dhx1Br3ZYvK7HVurocfHyXv7
iSfHW69ub7+52Pno7t6nDw7e3t29t7dxml59cLT9/M7pi3unHz+5+PjJ7c+e
3/3q5YPPn915erq9ux4BFScRDYX9PlApQDkI+oOglMTC4b2tjScXR88vDh4c
g2BJ7G9tHO6kXj268/b5g6/fPvv122dfvXz0xfP737x5/NWrh1+/evDpk/OL
3a1Ht0+e3z17fu/24ztnZ3u7qY3NaBiwvebwxO3u1RXfmj+YiEQ2ggD10EY4
vLEa20ytpbYT6e11EFmpjVgyGk6sg2SOJMP+tSCoS8H1aGRrc307tZpei2wl
oqlkPJ1e3d5Z39tL7lv0poBrJex+lyNKhdag0gFE456VrbD/Tmr17d2DN3cP
zlLxU7DHY36DGhChYrAFNCbfqNbazVaJSB1yOdfAbjZb9MCqrTafx8fkqdEk
CYYipXKUWIZ8bFnYOQcPoPgosgSsCCQ6jlBL5CiX6TI2X2WzgDfLb7W5nBbb
o5OdJ2f7J1trd3bWT9Pr9w/TF0d7IKscDq/J7JLIzXKVDQDMEpphiYUrtbFE
FgbPIFea1yMREAtv7h8HPW6/y7UaDm6tRcE9P9lJxiOBmN/16Cj54GD92enm
i9vbD/cT93biRwlfKuwwG7RajUqnVskVcplcrlIrAdhqtQoMq9kQC7hjAW/Y
4zIZjEa93mIyWk1Gu8UU9zvXgi6Qp16vLxqLra/GgZNFo7GNtbXdzcRROpna
WF+Lx8BiIPAu8UCKxiOhaADkpSMY8AGvAOELutwImAF7WHGEvCvxIEhL9wYQ
PafFbNQZDFqQLyYDyA2d1axzWPVuh9HrNDstepfV4HGYwGkehzngdmyE3Bsh
z1bMt7cW2k1EHx5vv7p3/PHjsxd3Dp6cbj+/2L29mzzd23p+5/D5nYNnd4+f
XRzePkg/u3f26sH5R0/ufv3m6W8+fv6bT1588+bJ168ff/niAYD87uH2fnI1
5HXbbXZQF6x2l93p9vmD+7vbj84Pnlyc3DvePd9PHe9tf/zy6R9+89m//P6b
f/+nX//td1/95btP/vbD5//6u6/+7Xdf/PXbt3/+5vUfvnz5z99/+q8/fP7H
b978+Tcf/fj16999/uI3b58+OT+6e7R/Cmrudmo7mVyLrcejCZDkG6vANtKJ
2EYovB6OJNbjm4l4Mrma3FhNpjdSx9u7B1up5NrGZgIoy2Yith4LxWP+SNgb
XAHtg92nVemBnPmBN4NiZzSFnY4178qj/c1nx9vPT3ff3Dl8crT19Dh9thl/
ebYN0vIMKEzIH3bZTCAONIZlqpTGkARdzlXvSsDl2gj6U2txq8UFAhNLlTO4
Gr7YIJKZaVzNIk02sijoRwmGFoXDS8IlmmKJqsDSFCKZSaQwe92+qD/w7Gz/
9b2Tjx8cf/7k9On57vnu5n4qabK42EK9xeq22sCb7wftI0NgJnJNRMhAgY2w
2Aik8XQ7cf9o++n5XiISADYZ+ala2wCRBr1BpzlKhm7vrD072fzq2ek3Ly6+
eHL25v7Bg8PEs9PkyVZ8I+iOuW1mvQa8JL1GBQJbrVZqtWCiADi57ebgit1q
1Os0ao1KFXDZEgHXxVb4bjp0Lx1K+h0emykRXFkP+wCu67HwnaOdJ3dO7p3s
HaY3j9KJ8/3N+8epZxd7r+8fvbp/BBgDUN073rk4SN3e27i9n3x0sv3gKH3v
MPXJE0Dg/rPbAL/13Y3ww6Pkk5Pkw8ONF+fp13d2Prq3+/b+3uePDl+cboL9
eH8/AU64t5c4206AmP3k8W3wHl3sJI7TG5tr0ePdrQenew9P947TCQDzWXr1
7m7i5d2jNw9OvnpxF0AL0vi7j599/+mzTz+89+2nH/7h12//+O0nf/7ukz99
+8nvvnr95vH5+dEuuP9395OHm/HDrfhJanUL7LcVVywW2U5tHOykDvfSZ0e7
d8DWXVsFderrz978/U/f/v2Pv/77P30Dxr//4eu///Gb//jx1//2h69++OLD
7z5/+Zfffv6nbz/+03cf//nbj/8FYP/bz3/z0ePPXj769MOHX7x8/Pmz+6/u
nV0c7Jwe7B6kN7fWQH8RBzblAV2AO+D2BcOhcCQcAT+hcNDn9zpcTpMNJLFe
pVXJlVKpTCiTCSQSvkTKV6sNErESYJwGohgNbQR8e/Hw8+Pt13eOXt45+PLx
6VfP737y5O6jw/Q3z2+DW/HRg7Pbu5ufPTj68jlY3Ap7/UxIweHIdqKBe3ub
93Y302uxWMC/FgpbLQ6lCnBgsZodPpc3FgiAdkIkM8yTpSOLQgJLwxYYGTw9
Hdax+Xq+WOtyuPY318Guv7O3Cd6L9UhoKxbaWotp9RY8U45nq4QKq960Itau
ELnmWYpmjqQksLVylREU653E6imAZycZCXhBlBpBkIKMAwiqlADVmM95uhX7
6MHhm/uHj4+3DkDT47fvb4T2NsK3dxMXu4ndtWDY44z7nDHfynrQHfU5oz7H
qt+5EQTb3Lzqc2yG3T5QjQz63dXA8+Pkl4+PPn+w9+m93a8eH54lgxt+x37c
l44HEiH38Wbk3n7yXiqeNMrDQkZQwraK2FoRtGIBMqNeC3tTIHUCbr8H2IbV
aDQAdU4DLz0FvX3yfH/r9mEq+u5vXRuxQHo9cvyuSG3dPUje2U+e7aw/Pt1+
eJwC4yQVP0hGN2OBk+3E3eO9Dx9ePL97DOrRQXIVZO+rR7dfPTr//OWDl3cP
v3xx/9s3D//x82e//+L5N68f/PDlqx9/8+aHL1/85befgvGn7z767tMnHz27
+OazD3/46vVXr+5fHO3ubq7fPTt89ejsye2Dt49PXz08/e3bR09P0gepdSDM
IeD+QKtXVnx+XzQa/snwo6AqPbl//t1XH/3191//2x9/87ffffnPv/3ix+8+
//rVo6d3Tj58cv+rj55+8urxd1+++f3XH/3h67fff/bh84vD0+2NjQi4aUAj
vKugs7RZ1Wo9T6blybUSlUEoU0sVwA5BvCiMBkCS0mRUGfRSrVasVgkUClip
hOVyWCbjqZV8tYKnkMIqOZ8DyzUKbSocPE9tnKXWQQ91O73x/Gzv7cOzD2/v
v7i9//R099Wdw4dH23d2N94+OAEuens78fJ8983d/S+fnHz5/OIVuNfRMMjn
/fUwQBHk5O7G6mFybWc9bjRY3I6VrdX4YWrzfHvr1b2Thyd7iVhMpjITmTK+
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
8gNJ8DqDHjuY2Ew6k04T9zu3Yt5E2HMMyozLcpqKnqcjb+/vfvpo/8lJ8nY6
thP3JILORNi1HrQGnOq9mHUvbg25dWQKfnpubh61hEYvU0gUDpMtFQvVUpFa
CJsFrLCI6iDNhRioGIyLcJZXudgYZzFKRwap8yFo2cdYCAhIHj41JKWvKllg
hAXEdQ2UsonWtPAeuIpLu+PQ7DjU+3bFadC65zFuWKQhOQNeHFsa7ZzsbW1t
qpvu7+hra2ppqh/rbWfPj0lwCL+AcMfKO9HSPByEktAjWW4hISuxM01JFfUT
D2zjzIooYzRMCxXTKIfGLCKESYLw6LExK3nNyfLol4MWnEE6apYtubVEGWdC
QB/iU4a72iqG+9tmJzsWZkeQs1Pjw51dnZWTIx2YhanRwbbunvrhoTY2Ex/0
mpwaFpsyPTrUjEKNC0VslZIvk3BB9YfYDAwWMIxDYXAINHZoeqFrHGA8PzC9
0PKTJJd2zRa1TeW0TOQ3T+Q0j+e2jOW1jGU3vxu5rWPlPeNNQ5PtYzPNQ9P1
/ZONQ5Od49Oj8/Pz2MVlEoYBUSVS4M8MvoDM5hJoTByIfQaLzGKT2BwyG6Ks
BUG6ejVaE58ndjud0WAQHMO+FZ/bFfa41oI+0CKIpQqJSGTQKHRykQDmCmCe
RiaVSYDbS2Ce0O+yOuxWmVwplSlFEjkDEuJpMJUpkMh1TFgJZEOqMFA5smWK
kA7J6JBcJtfLFQaFysQXa6QK0A8CczZwhRqZ0mQwOVRaK1+i0+qt8VDoztHe
bmpTrDLOkvh9aKgVyWmf5wwsQVNELprBw0FCIk9IejdELJGcLlAQIAmWJWTw
JQKpTKFW2SymsN+1FvZEg+6Qx5FeC67YLX63DSzazIaQ17FiN6XXQLvn31r1
nqYjycgKmO+s+8NundMkdpiEFr0gYFcABWUyCXjCMnoJg8MRAM/z80skHEHD
ollZZJ8YSpkU+xbZupi2o4J2NdwYtLwno2/wCRHWkouEjMCEEBsDlCMoYcSU
7E2jMKXjxGV0n5TtkzJcMDEiYaxAeK+Q5pcyPXxyTA1v26UvU67fnvg+iasf
rvCTajofP2WHlknT/bjpfgMD8cjCfqgj7UoWHxqoaRHSQOmlLdTQ5uowM2Uz
QzUa1qITmuMT+5nYHjV30K+Z27Djt9yUNSvGrlg4jkhvx8VHAeg4QDn2U5NW
ol+PVvPGxexxEWWwu7lkuKuqrbGgqaF4eKCntb6koa5oarBtoKuuoa60t7el
t6d2bKyXTl7AzPcB1Dtaqwf6WggkDJ9LYTJJPJgDcSAcnoRA4wenFztHkU0D
cw39iLr+2aqe6bKu2fLOmZL2mYLWyaym8eym8Zym8bzm8YKW0dzmETBymkZy
mkcK20aL2sfAYnbTSF7zSH7LSHHHWOPQVP/07OAMYhgxN4tBk2hEgPcCdnES
OTcwNdM1NtUyONk8MLm7FjrYiAY9bpte53faPXZQnw1mnT7kWYl5XVG/W6NR
QxBbxOcpxEKDQqKSSeVCgc9mUEolEoGAzeZwuDyhWCIQiYRARyTiFavRZjQo
FCqBRCGVa3R608q7LyR4V/2e3eS6XGPiiZRavdlkdsiUBp3OpAZbSazmCNUU
SEHkKJaZMixbOU+VkiElT27kSLRskZrAkeCZomWGkAqJdHqD0WQSyxVkWIBl
wzg2d5nFRdOhWRJrgcpeoLCIEJfO5zEEAkgoFMokSo1SqVbqdGqTSadUyY16
ZdhjDq2YnBady6K1GDU2s9Zh1cX89uCKOeY1HazajtYs6bAROIbdILTp+XG3
RiLkYJZxSNTSMpZAIpA4FIqKQXHCVBuH5BVzNjSipApOK1gnOu6ehpvkE/aV
zHUYu8onbig4Bw7dtpaf1vJSBvG2SbxrluyZhWsS6goTHRGTnXTUqpgU4CwG
Yawbxtnp6KSG/cVx5PePNv71xfZfHq59f+z/48ON7++u/nAv8cmO56FP6oFn
Pw7Cj4yYLz3UPwToT3XIEKNHiW9Ly+Y2+AMR7vBtHW5dOOYSDB77+V8c23dW
aMd+5pYNG1JMmzmjGybSgzDnT2fWZz78Z5vSv96xpm0ov3Rcjut14vr0C13K
6XrhSBW2rRDTUzXdlD/XVkKf7kQPVA42FQ12NbY2FHd1Ng0Pdo4OtrS1lLc2
lba1VE9NjCJnx2ZnRqikRQqJsIBC9YzPt42iW4cXWkfm20aQXUCMZ9CjCNQk
cnFmYWlwcq51YLKyc6KkbTKvabSgebSweeQd1U2jWY2jgOrC1rHiluG8pqGC
ppH85uHcpqHcxsGC5qH8psHC1pHK7vGGganKjrHy9rHS1vGKjsni5uG8+sGc
+oFE2LcW9AY8Lss7MXbvrYd2EhGX3a7TqpVKqYAP61RyrUJu1qoNSrnboHLo
NVad2qBWKMVCk1qukUuAKs0t4hgMpkWjjK1Yoh77qs+p12oEIrFAKHr3cYNc
AVqwvfXgZswb9dpAY8EVivliKRgypYovlXP4IjpXSGDyF6nwJJY9uMhunWX2
zLPAHEHgoClcFIVDgQRsgUSiUihBnTCoVXqNWKWEZRKeTALqnEQhl6tAiZDR
eTwil4OH2BQuBwwaD6LCHCqXzeBDdBAdQlgiFbkdRotJ47RqV6xqkYQnkXBN
WqHTJFn1asMuxdmm6/lp7O5uMORSmjR8s4bPYtEWMdgZ5CKTzpDAXJtEuKaV
JbTSNZUwKGIFJYBn4YZauCFjH2qhLQU7KSLvKVgbYmpCAaUMkoRWnNbyd03i
batq16E9WtEdubRbOn6Ai4lKSC7mwqaSFhfjYxKSX0AMCoif7vv/8mLnzx+m
/+Oz8//v++c/Plj/dEv/elXzp/PwH499fz33/3gR+tuZ87/fcf7n3ZX/PNS+
si2fG5Z/tyb8+7byv6Zk/21b8S8bgs8ijOd+3LMIdM/JDpD6IsTeML7bt9js
QbUEcN23lYufOklefKMP35GmDTiQtZbpSutYuWGgWDNQYhwpt03UmEfKwcQx
WeOZqY0Rh/el2F3RYpw9p0Z1Uac6FkfbF8Y6Rrtq2urzamqKhvq7O9trOjsa
GutLmptr6hqqO3r7+iYWQET3js+PIZeXiWQGi8WGuEQKHbmEBxLSMTxT1T1Z
+dOo7pmo7h6tH5gCXWHvxPQ7zR6f7hgaa+ofqekarmgfKmkZzG98N3Lr+zLr
+jPrevMaBnMahotaxkrbxsraJ0pbR/PBSv2Qf8Wh0+pAJhv1eqfJkIr5fB6H
QCiAuCyYy+bDHJlQ4LUadEqFS68+XHWno26zXiMVCsCwaBQKqZjHYalkYgGf
L+TBB2u+RNirkiuEPIEE5DWPp5CIFVKJy2YMus23dyLrEbfbaRZIJe86B4GI
CfOpHJjIYuNA/wBxGTyYyIaW6JxpHBNJZBNYEAPmwWIRRySk8mC6gMcUC4hc
iMKDCRDEEvKFMrFcLZcoZFq91mrVgwTmScRkLofB4zKFXDroo7hsEsQkshlU
iMUAYHMYQHzpEBNc3KIVhZzqjYD5YM11lHCmI+aDdfvxhvNw1Rr3aixaWCai
y8VsMpnYPTQ5MDq7iF42ivgxjTSu5KW0ooRWsqoUrqqEaxrhtlWdNqviUs6m
nL2n5e8oOYc6fkoJ7VvkuzZVyqoFybypgRM60YZesqkXpI1wWs+L8Al2Oioq
Im5rOOtSup2CVKBGkzr+j8/3/+2Ts1cb5jdp53/+5tF3R44jO+GOX/Cnx8mv
9tz/8+3B//jo+H9/sv9/vjj67882//fnJ//vy+Tf7wX/5+PwKy/1jYPyiYfz
xLy0wx9LEFu9c7XumVrXRKV7stIzVeUcK3eOljrHyvzTVf7JcttIqbG/yDxQ
6Bgtd4yVeiYrvZNVrvEK7WCxeazKO11rH69wjlV4J6tj6LYUY+JEgklyprS4
/qRo8cQM7agpeyqyizjMmGxB9DW0N5QMdDXVV5cUF2UXl+ZX1pT1Dg6NjE+0
9o+2jyKHJiZHpqbBSk3ncFH7ZEn7ZHnnZHH7eHnXZNPAVEPfZEPfaMvQ6MDM
LAq7hCfjcGQsBrc4i0JOzc2OTk/1jE7WdQ6WtgwUNQ/mNgxk1/dl1/Vm1vw0
qnuza/ty64Zyaoeya4eEEgWBxeXwBBAfhngcHsAAYtBYNMCXRPROhohEioTP
dxq0cY/19lb47u7qYWpVqVJSqXQeBMklIIX5RrnYYVCrZRKZSGDWKfwO06rH
uu5zpCNAUbUKkYBEZ4H9KRAJRDIxT8SHhQIWDLN5wMXBNuDL5BLwZL6Yz+BB
NC4Efi+IVpYAhiVCtpDHEfFZAh4VhugCmM6HaTAES0RsIZ8nEQnAPgIRLRVx
JUJIIuCIeTypgCXksYQwWwSzhFymgEPnsekwi8FjMWEmmwsaYbZGCW+HLS9P
V58dx58fr7692EiHzUdrtvO46SCouh1R76xI933qPa86qAMXxnMpRCmT4pby
1/WyTa3owCA6c6i3tKJ1Fd8nYq6q+UmDdM+qBFG8pRPumSQXLsWRWbyrE+wa
hGcefcqmCcvpSQCwlh3XcP0ysldG2LeK9k3CkBC/bWcf2YXHNumGjL4moT1e
dfzuceLHl3tf760klEsvkrqPN2UxDeLcw3mzqvSLlv7+8envzkP/6/vn/+ef
P/9fv3709yeb/7ht3Zctn7DHVhdbInNN/rmm8EJLfL4pPFe/ttgamasDkzDi
3TE4WxeYqfJMVngmyteQDVFEQ2yuwTVcHJiqCs9Ug3XvTG1ktk7Sly/oL/HO
1stGyowTVdaZphC6dRXXnSL0+tCty12lkvmOKHNWhWhbo45tsyYORahdKcbP
mFRihrubSuur83KzrhUU3iyryCuvKiiuq+sdnW5qqattrK2qKa9tbStvH65s
Hy5rG6nsHGsbnByZnEGi0RQygYRfxhNwUiEkE7DkIkjCY3GYZCaNxKCRccvL
3UOjVR1Dpa0jBU1DJa2jFS0jRY1DWTV9ubUDzb1TDZ0T7f0zVa2Ds8vUBRyZ
QKGQaGQClUiik4k0MKcQqVQGk0mkMuh0FpFC43N5YbctHfVc7MQONsJup5UL
wWwmSGaJmM+36RQKidBjNcY8dqNWCUAzaxQxt2Xd73Qa1E6TXioSwxCAF+bz
eTql1GsB0qIELIvFQo1CCgxE9+77ElIuH+aJBAKJiCvki2USjU4tkUvFcik4
AhmHxQKumA+LeCKZiPcOdZgt4HIEMHAJMAH0gsERwiw+wBgCE2AXAgkslXH9
GjiqhTe03JQe3nMpnsTNr9OeZynPix3/Zwehb/a8T6P6qJpxx8b+8cD6r0fW
e3b4VEP92+nK9yfBT7dcvzsJgUL//b7304T90C566JH+ds/zyZrpo3X9m5jq
zZr+623nN/vet2umr/aDj+P6F9vuJxv2C78iYeAe+ZRrRoGaPRvX8zWMSSeE
9ooIGubChgZKKlh+0bJFMmHkTfgEGODP2wbo0yPvtpd6HlP+t2/upx20k4A4
YcFSlyosvIldPV6C6dk0shJy3Lcnwd+fRx4q0Wfkbs9MBbEt0zVRFZipW0O3
JlHNiYWm+Fx9BFEf+YnkwGzdGqrFj2iKozuCyCblaJV6pMI7VROYqvbPNYDo
Dk5WxhF1ot5cem+Be7qK3pOPbMtWTdTQ+ospvSXIzmJ4vFo0VeddaFlZaKV0
lcx2lMjnezjjTVZkG3+wzITq8ZBH9dhuGNHR2VAwN1A13lrQUl/QUH4zN/ty
dt6tjq72hrqS8qqSgqKc2pamhra2ls7Onv6xvtHZsYmpqZkZKpVq0atlMAOz
jGEyGSIem0knSYQ8vUaxYjPaDVqZSLSwsFTVPlLYOFTQOFLeNgF4zq3pz64d
zK8bKGserukYb+mdaOkZXcTimUwmlUalUshMsBOoZAyesIjFIRexi1gCgUSl
MJgYPBlLoILsBWG7FXZFvKB1snrtJpjHJ1FoFCodBg0jD/aZdRtB13rQqVcD
34C0CqnToAo5jV6rXqeUAcLterVJo/BatXaD3KyWqqRCrVxs0yvBmWIhX6eU
GNQyl0ltNWo4PFAyuABIJgxxAKt8LosHoIUobBCzbI7g3SIk4nLFMAw2igji
Ct89BEMgFbCF4Ew2Vwz2DxsWsEJm8VOP7ETHdtMWnKRZL3n2kQX6et34T3dW
H3pV3247X/rlWxAyCqPuGZlfRqTfRYW3DfR7Ssyf0tpXIcW2ivnSJ30bEL32
Sx+YmBHRspc5+8TG/i5p+D5l/X7b9sWW7dM1ww8HAP7Q65Sdi+3h4IZFlGEJ
ZYi62A/hhnUQhoJqdvLwKvq8g7MUlpEU1NlVFTNl4ETkaAXUh5urgDC9Bxbo
w6jsIgTJWSMKzvxpSKnlojQwirXcPD2cs4xoYKDapnsqxYu9zqWuI1q/b7FL
MVnvm28QDuR1lrzH7yoII2t9yJrNxdYDQm9qsSWJagxPV/uma6LI+vh84zqq
JYJsiqNanTMNrL5yF6KZ11+Iai9g9xYEpyqDM1XMrtzFlhzuYMFwS35ffRai
raCtOqOj6kZV8QcdTXldjbljrUULXeVD9cUdDcWDbaU9TYXTbQVDDTlzneWk
wZqx9tzWhvzKipzupsLW6uzuljLsUA08WkMZKB9vL22ozS8qvJmZdb2otCAr
P7OsqqS9o7O5rbOmtqq+obaptblncKint7e9u6dvcLS7r6+hrb2lb2wE2AcO
Nzk7PzqzODKLaeiZLGsdLWkazqsbBFSDSVnLWHnzSGnTYH3HeGv3WFPPBESn
/QQCW8gFTEIMgDSZTAI9KhHADDAmLiz9X7DffZTBYdv0KqtB47cZdlYDHoeF
zwPYQRQKDWKzVGLhilXvsWgcRrVNK7do5Ua1BBCrlokkAp6Yz1sxqgHqBqU0
YNcD1MNOfcJnPVp1RT1mq15l1irdFq1Vr7QZFEatXCETcmAOHWKxYDYDZkEC
DpvPoXPZFPBv5LGoXCYdfjdYvHd/S+cxmfx3RwjEtpQrUwh0GrFZLxYLWDsm
/serxgMjTzjRqZ5oieEGzkWoRyrct5vmEyX5qRW6b4Ff2KFHHkUYxoUY8wcK
8rEM+8ZM/toPnxsY23LKkZp2pKGda+hncty5murFjTiRHc9t0CMT60MHnIRm
1/mLv960HNq4W1aov7N4oLtiYqgOMVYzMVA/O9i0MNy2NFQjnG8TkCZE5EEz
u5OHaxFga5z88ahs3sZHLU7VoUfLY+qxA/tsVDYhpozg5ttws+2UhWHFYp9o
uhIzXDQ3WDfRWTTRVb3UW8YeqjTP1Ymm2mkDjZKRanZ/aW/FLWpXiRdRE0I1
bWDa9/CdW4tNwDSAM0eQjUl08wGuM4VuTqJbosgG83SjbrxGPlzRW51RV3p9
rClXO1HtniqHe3IxbfkjDZlNtQXF+Zcbyq4WFV7JzXo/O/tSWfmt4qLrxUU3
qsqzG6sLa6sLioszSouvFRZdLSm5Xl2e1VSdXVz8fkX5rbLSG+VlORXFWWVl
ucj+aieuZ40+zBmp7m4sGa69WZZ3pSTvanbmFWAj5eVFxSV5WdnX8wtySstK
SsqKa2prauprqmtrKyrLSmvrQNj2DA5PzcyOTkxPzi4OjC2UtYxWtk+WNY3k
1vYXNA6Vtw7XgVjumegZQcwgFqcRi/NoPJ/DtirFRoVYLuRJeRAfYvGYVBmf
AxgBhEu5LI1cLBQKqHQa8Gsmmy0S8JQy8Zrbcp6OpCKgGmiloF9jsUhkChfi
AG69Fl3CZ7mzFbi3HXp2nIj47CIBVyoCMgRSlg2qCpvNNOvkWoXYZdKcbIZO
UpHNsDMRcobdZptRZTbIlXKB164Nu/R6jYzNZQOeWTDr3eCxKFwGkUOhcGkE
JoUC0agQjQYx6FwmFaLTYTqTz4BFbKmcr1SKVEqhQSOIa7lPXcKP1synZthL
nbFihmLkiYda8mMz86s1zQML64A3vwfPb7Nn71iELtKsaKghSJrST7ebR2tP
JYsXZk6Qg/HS5g3zgwZkrwXRbl/okYy36kfrdoRLEfrMgQIfZ07Z6ZMfrxlt
TKSKMlZVcbOuJre/u7Kvo3isv2FxqG2ipRSeqvNReuWYJhaiSokr5hGKVbQ6
Fr5JQ+11C5ZZS+1SWktYMrIuHVWQWwnIBvJsjRXbE6OMHFD79khdPtIIdbyV
OdHCnu5GdGRCo2VGZAtxqHWsrhTTWsYaqKJ1lXjmmgLI+uB80+ZyWxrbvoZu
sE9Xm8crY+iWbVxHeqlla7F1A9XkmqygdufxByqgjrzusoz68lud9TmorjLN
WIVqpJTSkd9eeWOwrWKg5npVwaXszPeyMn6Rk3Upv+BaVvblrMwrWdkfVJTn
lBTeysu9kpV5KTPrcknRrc66vObK61lZvywo/KCg4EpZWV5rfWV9XcVwRx1u
uJY70zBQn1tVnjPVkT/Rmontzh9tK+iqzWqoulVWcq20NLOsJC8vLzfjRkZe
fk5Wzo3snMy8vMzsvMySytKyqtKent6G+qqm9vb61u7i+u6C2o7qlp7y5kEw
CusHqtpGWvtmhydRI5PI0Ym5jt4REoHEpJBA5ycXcEU8Lg3AwqIDgeFBLDaL
rZIInBaDf8VuM+l0WiWDxSCRyQwGXS7kHm2GA05T3OdY8zuNGgWFRsURiSwW
UyaE96OOi1TwYN2TjjhPNoMxj1kqhml06k9uQiNRyFIhV6eSyEFui3gmndxu
1kikoLETSt99ixUSiyC1XGhQSzcD5rgXGApwbJ7ZIBZIOAwejcSmkCEygUUi
sEl4FonCodAA4WwKnUNl8ahsHo3DYzA44EI4CUw4tsD37LzzFVmct3xsgneN
vChn4dzIOjdzHwU0O3JyiI7YkRE3eagLI9uDHZYO1VuR3db5Pg9+co2D2paS
behh19KQaa5HNdlqmG5TD1bDw828rnIXpt+DHzZg+32gwZ/udMNo7Egzor+2
ovRWTdXNno7qjqaS4Z6G+Z7aiY5swXxNit6tWaqmIIqFi6VKfAUP17A8Xzc7
UoyZ7sTO1VAWS6OiiR3JjBRTp8e23RfNvBZPv5HMvuBPPOaOObDdiJ48+mg1
NNkpnmiwLzSJxyoQLXnMriLTeHUU3R5BNa/M1AbnmyPzTevoRvt0+cpMlXK4
LIJu2cG1pxebDwk925hW10SFCUDbVYBtKyC05U3XZtSU3Wity+mqzce15C+2
3WL35I/UXp/urJaP1c005XQ3FKN7yhCNWfnZ79+8cSk/59qNjEtFBVfrS7Mq
8z/IunmppSxrvDl/qbe0q+xqxrWf37jx81uZl8rLsztb6pvqqxpqikuKb1SU
3ijIv1ZScq26LAtcrrH8SmlJRm9bWUdjdkvtrc6GfERfbWMZCO1f5b2D+Vp+
7tWszBsFBbfyCzJKygraWpsqSvOKS3ILi/Pzi4vzigsrq8tLq+oLKuoLqtty
yxvyq1tKa9tKKhvyy6pu5RezmcylZRwWi6NQAANMPI6gEPMVEgGbRQPqygFZ
qpZIJUK5kC8VCwQ8SMiH8STSMh4LTtDIQA+oTQYdcZ8NdIFUGu3d158oZK9Z
lQg6Yl6zTiUFJ3hsWrNOogM6wgfGwuByWWatTKeRgYaSQqfyeRy+gEumkeks
KgQzYD4DghgyMayS8gIO9UbQEnJqYx59MmJb9RmsRqlYwmVyGWQWmcwmYag4
GkTmAIZhqkBAl8lYPD6dSsdTaViIhfcpmbdd0jsu6aFNaiYjN8T4UzPPRZtz
spZWJZTbQYOFMLFCmDixiXZVrE0RIUCadODG/fR5G24qzFpcgxYT0FKQgYqx
0H7afFKAO1OS0/SJEGF0BT/qJo9FYNRCT7kY2Umf7VXjxhb6G3Ej7fSZ9qne
0uGO2on2yuYakEgl7NFyG2HIhW9VLTQwRirYo4XosZvosbL50dKB9ry54eb5
iXLE0E01udNN79tkD7+SIj4RTb3lj78VTr2Gxx4yB8zIWlxfCXOoktpfa5xt
DqCbob58RENOcrnzjNx3SOxJLrXFFprCyMbVhUbzWDG2OUM+VBZfeice6wv1
7omy0HxjbL7eOFYM9+UxOvMlvXkz9TenGm7WlF6rq7rVWpWFbshsLrk0VHVj
uPZGX2OZeLAS157bX5cx0ZzD6ihsL7peWnitqiKnvuR6U9kHo025PWVXM29c
6qkr6K/LWR6qE0/VL3eW9Nbmt5TfLC+82VBbVlF2q7QYhPb72VnvZ9y8lJP7
QV7u9ZLijKLc967ffK+kLBPMy0qvVpXemOyq7m/IGWjMqCm/VVmWCZ5VVHSr
troY6E1paXZ9NcjpHPDcG7euZeflFJUUAVEpKC3LKijOyAVlo+B6dmFmQUVR
WW1ldWN1dR2TwcQTiAwKhUmngR8Sicxh0LVKqUzMhzgsKpkkgDkwl0un0Zks
JrBrLocFkIZgCL28TCYT6Qwak06RiWDtu/8K57AYdDyRiAehTyZLhLBQwOXx
IYjLdhgUEbfZqJVJRFwWiyEW8RQyvkohkoj5bA6TzgS/nUKiE0k0IplOxJPx
bA6Nz2dKxJBKKRAKOVqNSCqHpTKOQMyCeHQmRKWySBweiQ2TxGKqWs4yaHga
Jczj0dgcMpm2xGRi1TxKiLu0q2GdulWnHq0TJuuI8wcOuV8Bc6YH/DzCw8RK
0iBcFZO2FYwV3JQLM2Jf6JUMNQRI09q5ft1U+wYPu6vjxUTUPT0/KWedG7kX
KtIpjLitIh4pyScG5rqMsjzQIMMM+HhLcQFOgBphTPeKFzp1pEkXZykmIQvR
w+K57oXOnCChSzJbLptvkqG6fOQe+mQZC9niZc+wZpq4qHYDuZcxU2XGt6U5
o7d5Ex+KZ55CQ49ZQx9yR59BI/cZfa752uXO4qWWAlp/lWuhyb1Qb5utXV3q
uEcbuEftO8B1bAFnXm5PzNWuzdUJevJwTdne2fo0vnNjqSmKrBEN5S71FFF7
8mhdt/rrrw/V3FpuvdlXnTFVnwF6vaK8y4VZ7/WXXKnM/0Vl4Y3e2tKWyqLF
lqL+yozy4l9VllyZbsml9pSAxrC64lpb9dXa0ivt5Td6Sq/1l9+qA6Mshzpc
p0O3yBFNrKkO7nTTWGNWU1VmY1V2Rcn10tzLuTmXs3Mu5+Rcz7z5QWbW1cxb
lzJuvFdYkFGYdz0v73Jm5q/KSrLLS/Paa3OLwGL+zfy86zU1BW0glUuy8vMy
yoozqyqySkuu5+a82xH5+TcLC2/m5GUWlhYBtrNyi268G4Dqgsz88ryichqZ
Cpo+wBSbCWyCjsYsgzZLIRXqlWImeAwUlcN498k0lyMW8gQwWyUXA6TlEiHw
aghiI1EYPA4PMWkkIgHmMEH2kilkCpVKplIhNkMgBMFLJZBILBYdqIVOLdEp
hRqliMmiQxDdblJoVBKNUszjcagMwCGRxiQyOSQKA0+k4WgsIomBpzBxZAaO
xiYyOEQam8DkAuaxbC6ewVmEuIsQtITDTdBpCDIZiVqcRCDHp+fGpmdGGJhZ
P7yc5C9uigl7JsGBQxFV8dgTvVEROShlkYY6jPjJI5vIDRMMi8PG8eYAfsKM
7LEj2q3zPdsyapSLTYmJJyb+xYpqV8/bt8lue7S7en6Yu3xhF59YRLtKegxe
lqNHuXNjHh7RQJoKcpftzEUtbsxGHN1RM9ZFpCi8bMJNetmLjuW+fe6EeLZ6
VYJPycgW3DBrtvGBi//YyglSJ5+4hCk5WUeaOlXh7ykXX2qWP3ZyXphpj6UL
z0SzrySIZ9L5E9agYbZOMVFrnu8IYDvXiZ0HlJ59QschofM2pXcH0xKbb9hZ
bttC1cdmq8PozlVUc3yh3j9fZ52pNE5XMPtyhxtz5jtuodqyOisza0tudDfc
ai67Mlx1uaTg0s0bP795/ReNBe9XF7/fXJvT31jVV5nfWZFZmHMFoHjr1i+K
8y5ju0q6KoEwXG+uuF6Wf7k6/73hqpszDbnlxTdLCq931WS0VH3QWnsV2VvO
HK3E9xZMNuX2N+bVll8tL/og5x3PVzIzr2dcv3Qr8/3rN371wdVLWdlXC/Ju
ZmV98P6Vn12/cTk/L7OiJCsv90Z+7q2szKsFhRmV5bnFhRnFWVfzs68BPyks
vFZektFacjU3+4PWmtyyvKsgvcsBv8WFWXmFBcWFOYVF17Lyb+YWA6nlwRCB
SABMAsEA1rGEwfAhRshl5AshEokAsehSEV8Awxq5BIYhiYCrEvO1UqFUCEtA
hLNZS8t4OoVCp1HwRAIYwJN/yls6AUgum4Yj4QlkEo1OgbkMhUwgFUNapZAv
gBgsqlzGeyfMUp5UyoUgMsTBKsR4Hhcj5OHFIoJMRNTL6WYNSyIiQhAehvEw
d4kNoenMeSpjcgnTj0Z3k3Bj83P9yNlexFQfYmIAMTGEnBwiIMZDPOy6aDnB
Q69yUSk1K6XjBsR0dEvVCm0+LmVge1uYI+0pHWyjo1eZyCCqM82e82BHVpDt
m7ylQ7tMiR7bVTPXFGwHC2tlLDkhwrFNmlZzLITpM7d6Q8O3URYcVNQKC5PW
8NYExDURcUOE39eyozysmz5vp86bKCgZcggebZNMdOhnW/f5iCCEeBq3PPEp
YwK8izZ7YoTumTgnGsYDK/+umQfCf1/NiHMWbmtpb0LqJy7JQ6fohU/6SE+5
kGNOhYgLKfpChjkRL56LkKes4TPmYBLTFF2o3yV0xOfrXVMVTkTd9lKjZ6Yi
stgZQjV75+sIXbfGGq5211wZrM9sqcqqLv1Fbenltsqs3rrCuvLrFUWXW0sv
3bz+D/k3L+VlvVdaeKWl/IPi/PeKCm42ld6oK/sg+9bl3MwPrnzws6zM9xtL
bhXlXC4suAbYzst8r6UsA1mX2Vx6rbT4Sn7BL2srrnVXZTSW/6ql5vpg7Qfo
noLl7lxEZ+FoU1Zd2bWSwmtZt35+5YNfXb3+i4yMX2Tc/NUH78C+WpCfnZOd
8atL//DelV8ChkH2ZmZm5GRev3njvZs3AeE3Cwoy2spvNhReLcq/mp0FdsTl
9sqbTWWZ9eVZg80Fw0259VXZtVVF1ZVl1ZWFxcX5t3LzMnLzkWgM6d0HdBTU
4hIWhwUKgV5aEvLYVr1cLuOzmRRgEWQqmcWgKkU8h14hFwPhZYBFpQiWCbga
iUAtFUAsxhIWi8G++7IOkHEKhQRDDC6HLhawQPBSGCQGmwrYhrgMLkzn8Vkw
nw3zWTwBkyegQTxgF0s6GdmpY6SCap2c5NLTzWqSXUsJWJjrXqFejtHKlrSq
ZS4XgSeM4fBj6MVB9Hw/jziiYc3TlsZxiGEuDoFHTsxPDFth8q5VnDbyUjLi
joywJcalFQyQsUktTO5uDMPYHaMY092CqCsK8vGrYkpaiI2TR7d5aD9xMkhD
7GnYJ149b7I3zl1OKlhS5KB4pk8y3rYtwu1KCGtc9IGB62eg4jycm7awKaMm
FCwzac5OW9jWsu/5tS4WBmSyZnFUOtvPH6hltBTRGvPNiLYz6eKRnpNW0JNC
woaMllIyUhJCgjkdpU/fNUPnBrYTOyKbaJFMtF1YBa980rsOyb6Ws6dhbkuI
d7X0+1rqkYp6x8A6U+HT8MyREHkoRidIPQl8xwF7fIvUF0LWygZLvIhqdk8W
faBSPNlIHSzqqLneXnF9oOZ6XeG1loqblQXvlxVd7azKmWourSm9kQ80I+dX
ZdmX6ouvleRfys97vzjvl7du/vxGxi/zbl0qznv/1tVfXrn088uXf56VeaWi
4FZR9uX8/Os3My5lXH+vsuxWV+WtepC92b/Ky32/oTSjo+JKUd4/lBdcQjVn
ySZrcZ15vVVXywveB1cpzr+ad+vnly797MrVf/jg6s8uXf4vv3z/Z9cyLufl
3sq89cEvL/3s/Su/uHYdSMjlGzeuZt68eu3aL95//xfZmdfzcjMaS683lFwp
yb9y/dqvrly9VFp0a6ChqL74Rl/tzdrSazWlmUMdVbOdlfXl2eUledl5Bdey
8xk0KgK1iFpaBDBjljF4PA6HwwJV0Mp4wA3EfA6XxQApvYhZIhIJSjHsNCqN
KgmXw5DyOaBVNCjFeqVILeUDo6BQiGQKkU4nkSkEiE2Ti7hqGZ8LM4FIUMAi
DU9nErkwFZgDMAoGG8+F8QopzaxlGxTk3Yh6d9VoMwGpxssEizY9w6AlGLVL
as2CRDItk83D/FkiaRyJ6F1CDdDxE3Y+LiAmugW4helB5EQ/DjnZ1tba3d7i
55OSYkJCgN1XkAEPa0J8HMYkxKSkgi6Y7lmhzEb4eHRH/WDxTTNudE2IPdIx
duWkXSkhzpnfkeL3ZIR9DYs10KRD9LhJ04yuClpbMb+rdA+au1BRjnQcL31O
ONyQEOL1S6MuBioopEoXxuCxtjBjDvwe3nAzu7OM21PF6qpkdxSzO4q4nSWu
pd4LOQ4kfFJMWuPj4iIyeK4G0bmy2JNgzp6rqSnOnKi3nNGUp5jrP9Wzn65I
NzVwXExZ4y0daZiHasaOEOunzR1oObsSfBqa3ecvHIqXU8zxFHlgm9CzQ+jd
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
eTFRcyh2E5bXzeJ62FjWTy9ZePsu3nVYfBvk/5nXfouKH7MmgJxXKetN1naX
dz4W3dc592HE9CVpX7ZJNjyq78vp/9rK/fd68mc1sO9R7LskK2rmupFT5lK2
tKM/CtZfsz7ARgAO/7kQ/l723M1Fb+cT90vZp7Xi5WLueq3yOW5NciifTJwv
XumRS/CtGnqYj9/W4pel0NlM6Kzo23FL72KaJz/vKSL9WfU/pC03AVFV3lMW
ESawDUOYFu94t4eFMAwBktzO6QGpqG1UZFMPsqkXDSZ0Q4nYbhIahgIDIg3D
oUF4FAiPbEZ2NRDgLSxMo4HeUWIhIkNdqt72fhKyn4Km4GATDAqH0EFCNBr6
EZ8V1K+/z6wePFAxtuW98zx8hI0S0iAjZLieTY3yKVREE7yzgUOG0FFN6G4Q
EtrS2lrX0vKuubkOA20eJIGHKZ10XDsOAWoDvWsBVsv7luYPnZAmSFcTBNoK
7mz+bSPgRgi4oRX0f5wEGAH4x3ZwHRj6sRMMsPoDuZdIpxI6OhpRqE4cuqWt
7b3ZrtealHqLWmtSmaxah1trcWuArNo8GoNNobfJVEaJVCcWa0Vqi9TuVehs
UqtTaXWqzXaVw630+2UejyQUUMVjOodP4Q3KXF6hwyX1uKWxsDzxm7Ryb0AY
jMjiKUUwIrA4eG6XIByV+cJyn0cUT6hDIZnPLw1Gxcm0KhYW56PqiEflsYtt
FoHVyF9I2NbKMalgksseNYsnp9kjcDSqG4XugiOxOEwfvcch4z0uF59q6buZ
0OtC5rkSeV3MPs1nnpaKT3OJp2rsqRS4m0ue1nLntez18sxOLnI5n7utRm9K
oYuMa8Mu2rRyriu+i6z1puh8qEUfa+HbuXBew1lzy85mfJ/82op+atXK/RqQ
3STU91H53zOmt7T6z4L5r4L1Z9b8Z8p47QNyLj+xC44tnNuw+sDG2zZPvebt
/7OZ+p+NxL9nXWdO7lfT+Jl54tg0viaj3cd1P0rut9ngWSFwu/T7witgK/lS
DG0m3Ttp737SserTzAJtVDKSnCJumqfvE/pvKQOQ/4sisKfoZ43cTb9q2yub
k/fv2aYegoIjnxzYIx6ytse04bObH5MNKUZwkgGMl9cfmCbaxrodTLidCY9M
oPV9MEM/bLoHPthLZJDxBBR4jAxjUxGjPbBeLIhNgclpUD6xlYX+yME05VlI
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
dkKW85TzJGY9iduuy5HXlfzbQvJbNfxSCb4tZ39sVl/mE6eOyQMTc0HaGxiE
pUYRc0JyZAgRG0V5GV0xFm5RNVSVDWwZWXt2LmC/NSP70CfadU7XRBQ3HQps
AV8j+lXN6JGNc2Rl71jYnx3Trwuh11rwvmh/KntuCo5VA+syoizzKE4GxMaA
HsTM9zPem6Lntug6CKqW9KzPfvlRRAOY+WnGluOTZ0S0i7j6JWd8yxneirZv
1eDrQuzXnO/POc9f86G3avB7LfyjGvirGnxJW66DqhkOKcOhLCmHPpvZX6LG
h7T5Ja699okuvYqvAQ3QW7eD+jkjb07P3QqbigbOKKEdCW1VTvYZp3ut3F4P
j+qfxNnHcQdu0WVM85zWfUvqHpKG+5T5Nmvfi1vXA7p1v3bZIV7zqu5z1seE
8jEiecpZN3wioAxymPTPaceST7GXcd3MAs1at+aShEVUGxsvY2LVLJSXjeIw
IDRiJxkHwQCRpuK7kRBoV0cXvJ1EQhPxMAQS1NH5vq39XWPTu/qGP1raGn4H
u6MRAW9r66iHdLVgUAg4tAMCbmlpevfh/bvODhAQbVALEP66g1pgZyWZDGnu
1mL/87h+c1hcnbMXErJcTBIKT9tco04vM5XiLFUMlZI5ndbEo5JCWu0JTNvd
o14fz+MTOGysiE9sMwjUism+AeLoEH6a1YdAgoFpGqZizPxR7RRNPIhLath5
i3jbIz/0Ss4jqpuU/gjoOB7Vadp1GLd9jtkWvYaqXepScK1SblAlWI/5dzPR
9YhnN+76knInTArBMNUvHIvpRFruiE3CsksnpocIadXEYVBzGDOtA+DNuc+y
rjmbaNWj2otaLor+m1LgoRS6yHruZoKXheBR1JaRTu74tRcp52FAd5X3vS6l
v8/HgF5zn7W/1OLfN2bvyqEd/cihabTGJ7qpnQkmsioix8cxoTG8Zxid4TMu
fj/m7HouOp5LzuOIctsnvciYTuK6bZdoTjdxnbJcJa1lQc+8gLDAx89JaPPa
CSCrhxHNllt8HNMDa0UzcujkhvthFlKLdwj7JWa6Ttvuy76zjBXom1XlwJJ1
etHI2nHxazomUKZWzJyXovV7VvOW1X+v+t5q4ccZ113O9udi9MdSDHjz79Xk
f2/m/qvm/5kxfDGNp4HdRNC7Z5q48oqu/fLf9S0qf40o3mK6t4T+MWXaAsDL
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
rOevlfDP5fCZS3lil5865pKitl2j+CnrWDeIbqK6olHsHKh9SRg+Egsvi6VG
SRcR/W3ctG0Wb5eaImoOzOJzp+Q9YfgnvfArqnpzix+d05cexUVIf+Sevwyq
HhYXdm0z6w71I7A1nzo1NwSK5TXvW1kQqxpJ6q7aDfvMY9r2mLZfR3Q3Ed2J
R+EZqts2jp+75QemiXOX9NijeIrqnuKmjYWxbePEW9L816r/PesATv6a8z0l
TPd+5bl79sw7f+1XgrccmEQHpvGDheG/846PmP4uqL6LGN7jxv9adv17yfrf
y47/WnX8e8X2mQOIMv/gEV05Rq5sgxc+2cNu4Wpn+eft4efF5tPR2o/rvc/z
zdeTtZfTzeut3M3R5s+Hs6uN1MV6/G4787q/9HhUvN7MHaSDx/no7U7hbrfw
uJO9jmjP9L2n0rp9Vd95LnBRzABPvtxdv9leAgcfZoMHufBR1gdM/jwfXHWr
YmZ5zCTLuLUJ47RDPpJyqHMeXTZgS0b9yzHXZtp7sRo6LyYu12J7S+GjpeDx
Wur5fOduN39ZTF1vZgMLM5tR28aiczvhWg6aPVqpRyFcNEpdGolyaojBJCOQ
MAiiAgqvRCIhFZXfv33/Wg4pK68ow6ERpRVuVAoUWkUl45rraxr4PCweQaMC
0ya2NDbQ6CQsDk4g4ishFSQCnEzCEPAoXg2bW02cGmoZ6m6eGu7uba41S4ZD
JrVdMW1XTNlnhZtudWxBKhvpqWGRB5pqRP2tHAaezyZ2CZgMGp5GIbIYVA6T
2s5nshk0HL50ubuiogzQOJmIo1FIdVwWjYoikVAsGlnU06yXDDU3cBuqKfsu
1WvSnteKLD11qjaOebwzb5mfEfb2CLjakQ7NWOdkCzujHn9L2v9eDv5YCl66
FJduxaVjdkXWeW6XXAZU6/qxHdNkRt4VFbc8htVPgbnHkPLWP3cb1lyFNcuq
wa2F8ZeM89invAxpPrK296jqPTDzaJ948c68RPUvCfOxderGN3/tlS/PD9wu
BW+z7tzClLaTcxYxvWadydl+VSvDOda2bZt9TFnvYsaHiPZxceE2sqBvZcan
2o9s4l3j6IFFBKzvLqD8tREtrUhxyX6v+X8te19yrruY6TlhforqT+zT2Zn2
LWOp+/qufvjIOArO/Nir+LnkeFvUP4Q095GFx6j+Nab7e8n27xXX/2z4fq/6
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
S+bX0JpqiJLBViD/zoZqgBzA8LEYGFA1k4Kt41Dqqskt9Rw0CoqAVyLgFY0s
IgAJv7TLMy7wTDTNdnGGaoj9DOxALZmOg7ay8K7JDqWwTd4viMyP+qUDy9rx
v0qXZ513Xtm+rmdP1/3iFb36p28d43emoXfb8O5867VD9O6Xnmi6fyU15zag
z9H/2kt8rEWuSsuQrGcB9WPW83Mz/rYSes44LsLaPYf8KrIQmmix97DXlX13
jqkftrEXXcetumNdxLM34Z6so9e6XnMjZoQGs4y03i0a/k4ZficNH+6pS21f
bLze2k4NDXIOLNOXwDzjphcwENgnl2QdOUnHi3f23DiqrUEnxgWR/ur4MM/Z
iNVyoLYGTHqYc6pofzYNvjsm3r2Sf4fl/7U4/ys0909c85m1PaWs7zn3W8b5
mve/Hq7/vt1/P8y/Hq3txBzHJV91Xq5F7jaTAJJ/nK68HBbu95Zud/MPR+sv
R6sAMC43kne7S8CKQZRLmmUJkyRhLsFAwavdjNlPCyGg8+v1GHDRh7381UYa
KP9kJXKQC2xFLVtJ7yWQ+k7+diNxAV5MOEDE2017D9PunbhzJxPcSXmOliJ7
S5EdoO3lxZN8GKDFRsSSD5T4OWadLfgXQOHsZf0gJG4l3MWQdSPmPsiFgZ7P
C5HrjfTBUrQYd7tVk8kF8VYE8IwhaVcFjfN93W0IFATEwIryskrIdwjiO3Bp
wB5YHBQLQAEJgSBLvwI2KPv+FQGr4nBYBAoOjqooK//69esXDDBqNAKFguNw
Va219NLENw6GRUN6m2tG+jvwxNI2wBY+RwrU3NLAZlI41SxiadUcCJsIJgWv
GGmbGu5oqaNL+wUzA4KgYkw63EGjILub2MKu5g5BTUs9C1AHjVy6RR0UWonH
wlDwShIWScKjMKhKOgnd1UD3ykf80g7XaK1lgDvEp3Qz0LOtvD4+k46CDNZR
grLu8JxQ3tsgH2yT9Dbax1ufA5rXkP7aWVqBeWMbfvaJX72iJ9fYi2P01dJ/
pO148orfQjPn+p7fcc2xrm9P3ftrLXgTMz8VAj+X/dcRHQCbp7z/reA/Dmii
0+22Pq69mzVXg1V11t4vGv9OLvwVmX91i18dY6uTNcEe6pN97FTb4+ljTNWR
1hyKf9a8fxecHxn7Q0h9555ZFHKc3Yz8fP+VT/kQM34WfI8RzZlDcmCaDA9y
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
Ds5/uwXfdaQPBfovr/wvn+KHW/nTq/7pVj4oyY8qYpwN1e6POk/n9UcT1Mk6
9mw9d7HDeTJDnWqgjNcwZhrOqFsPQtiTCHbP2LyhrVzTlh5YK1fMNf1Ot36j
ywEduWQdpDl7ZsSUh7hlOBqXb3QZIb36jXbX/ugre/eRBXniw5/E6GcJ9kF4
olrtki61k7qLcB2FrLEq6kCJfL3bCJ0wQyeD6Llr6uozZ/ubBPq7BvNVTwbX
uxL3qiLeKshJEdZJ3NOfrl0YxdmE/z4RfE5H7869V6CaGwRBoxS4n0tK9Sqo
KYfkzqe6ckgfgtpLI0dPg2vYuKhFcRswZsOW24AhbpPluMKlBA0hpBPEvbaH
y/B91AHAIJvw3kdtACquPaqQmu5Xs30KekgvSAL8dqiu/p4dd26WAX++j9hS
TnnEKL5wKGM25ZXfnPEbgD+nfaak32wR0UwSllfFcYpoHr3Mp+F71JyATmgX
k7R8klsjiFiUlw5NWM8PqugeOc0lJgc0/IRNFrdI/neyKIj89N1J1vEGaWuC
AV9bmp+srq3OrRCsLC4uya+uLqmpLS2vKKhvKG9vb25tby4qKygtym9rrmpp
qFib7J0Z7Vua7B8aaGtorsgt3G5qqMzNyvtcXPq5rKy4qam2qrYKtjb9EDHd
B7QvMVDIjJcuNahBuY7KoCnpkKbs4qRddONR3nrVCRPnziMLK0g3TvG1UxbT
c2/sorRNEtXyzgxCp4QqY2BmJ/p3FsYXxgcnh3orKkqqyouGuhpXJgdG+1vH
+pv7Wmt6Wxv62pu6gIG3VYHYWFLyuaT4U2Vp4XRvreJ4yklYYx/NTfU3NtUW
NVUVKaCzD0bef9+E/n3t++KSvlrYr2b2Vyv3u4n2p431XU/5ocb9H4/oL6fw
X37Ff8Kan07+gwJ9wTsywKc4M3Wq9TblRhdjsoY2WsZbbHWczvCWO3jzzcKF
xiRz604ITdE37pibV7S1a8oi8Oc4cV621CKYabFBJ66YkAR5Q3Mwbkevchba
pBudpr1B18nCDXXnjXt4R9u8Zezec+CvfMQtY0+51Kpc7+RNN9CGyvlTVazh
Uvlah/5w1I1ZSdB3b5nbH6Kj39Wonzr8iwz5JkM9K/GgiMQF6HPOsQ25ojma
zsiI2YjjIRlOBe2pqO827k+51VGr/MwqN/MwEuSKBAexc08iGsa5muziI4Gd
Arp4u/B+u4n9fEy9XbgvrBLg2xE1NW4RAb8FFpqJgfsE3+6vP24vnlKRlwtv
JtdBZ4xqmSElBdzqTMcKaTnnNoAHevBfQK4EIo+axDGrAoAHwImUWwfI5+7M
fR2y38dcBtYpB7VnEDMNbJxTwXGruG45K2CU6ZhIPm5PyTgNaTg+JefMLLbz
sXraoZoOtwjIbjnNK6eZBGQx/kiMhQgxEPbJJvN4i3y0hj/a2F5fbmpprKyt
LCj8XF5VVFT6uaT8U0VVcUVFWQ2o4pXFjXXlTc1VTY2V3e3VoKavTPZ3dDRX
1ZYCG68oLykG3l34uaDoc3VlydhQb19Hs4lHzHjV4M2+pQIvl75s3JMJWTNh
c9giB3Xk2q269ylBsr5yiJJAz24JCINphzSsIFsZhzEVKaKkuUVECwftEuKC
Gg4SCpkZGRjubV2YGKyqLAXFBDjzzHBHT2c9CIm15fnNtRWjPa3dnTWtLWV1
dYUlpblXMtzdTFzvZ653YmcadyabR3vrBzqq+5qqVIjlj4D+TxB/PPI7PfPe
QM+q8Fkl7klD+mph/u7i/3IJfrfzvhlo/yek/J9z41cdNsnd8+BX+MsdgvlG
+9GgcrNHstrOnalRQQZCpHXhUit/rlGy1PIoOnqWHV/T1h9ZW1fU1Qx1+Yq0
kKQuW6Fj6tX2M/xCJreHxoZkvU+1O8Ze6tLBZ8O0vXsh4pm5/cTev8DOZSib
d4z9dz78irwhX2rVbfeot3o4o2WSmWrpXI18pcUIm3ahV87Im7esnQ8x7LsK
9a7B3XAhb1LEFR8WJq77iNsu/I4HlzvFJmWWfdxeJr0mAAm35/7bMxdwORMf
bxOT1VSYCLvtVdC0FKgUu8tH7uj5pEuvMRsyn+m4FzZZ0qnKOa2JHzcLHyOm
x6AmZZVEjNJk0J6Jh57vMl8fr69BFlPSg1pOxMDPDSb6tVc+w8O5G2S0C0du
apxXSnWpuCGzPAfSQSuoEdlE4P7cmwmarwKWp2QoZZfyTtaONxdEDLyeg+Gd
rOP3FsT4fS0dIUCsEnenWfBF6s4YHbakIu2x4Uty/DbveEnGpDikDI+K7VRy
NYwTwem6GL3JO90QYPdFRAQPtcvGw2dnxmvqawoK8sqqCovKPuXMtryktKy0
oQH4bW4vo9raCmDXFbUgMH4GOFFbB0y86HPBp7+7QfJKSgpzR7pUFXa11Y/1
toBy9hx3fstE3xKujF8Xt+U8IWSWqdk4MQEaUdHiJt6VTfAU1Nx6FAkjO66h
BGQEHXlXg1tPAW2b2HED1yuj+hVUKw8jwkN3lyfaW2uGe1r6O5uaG8sAhDfV
l9TWFZaXFVSU5jfWAvU2tTZVNjaUVtUUVFTmL0/0LU8Osg6WCCv9O8P1o72V
Y/31nU0VOzMjMa3ga9j8z6vQe8j06lY+OaR3KsqTlvaem1PEuVfgbqXorAKX
laP/HVT8d0j5LkekuAc25LxkvUu92eE7HrHAp5zIBfXOkPFgXLXWzRqrFM7W
KlZan0VHr6LDG8pylrl5TVm5oy69sDdv6SuO/X7ZfL3lcCzJOQoQVtWQQdvx
lOl44YJ3ciM6uecePDC3H9n7l7j5K9JairRxz9iNohdVax0GSJ9ytZkzUsIZ
LlWutWsgvbr9MdvxbIS4muXvvYqhoAUBMftQMxk+/FqMvOQchojr2oMp7dGs
7nTtPuq6vwjexbwggp3bFA4ZzcAjeLRCt4yqY8B1HOxNyJiNAGZwAIR4jHue
425QIlMOeVjLNrKRWsapR0oOa5hxPevcwM14QSpUp0O2zHmOYYIqhpYO19Kg
RgbMISZfulTXXl3KpbwL6hM2ANuisFV57rHcA+A5d7+ko6+ZxONFAETCtFsb
M0sTTs21V+uW0XPtS0DQkfbg8/1LA82o7WkxZkOGWefDF8jbw+j1QczawOly
PwkygV7uPZxs5WO2JGy6Vcb2KDk2EUmK28GuDtJ3p4ib45TtKR4SIsBB+dhD
LGynrqke+G1xeX5RGTDbTwAeqmoqKwCJVBaXlBY2NtR3dnSUA5bOHQ2QDyAV
KLmwBCi5oKO5ZnIYkEBRSWleRXnR/FgvaKQvFz7QTu/92oew+S5sSocsYatc
zSWISAjw9iN6zp1XmXJKo2rauZZ+YWBH1IyIlhWQEa/M7GugK7fs0ib3SKkm
Hl5GRuwsDNfUlNRXl3a3VzY3lzQ0FNTUFFVU5uXl/6O0+HNFxefqivz+rpqW
5tLKmrzKyoLZgRbKzgx/b/ZgvHt3sr2ro6IJSL20QIiD39pVz1bxj6jlzi67
0bGSSmpciL3X0F9ApVCSLriIRyUhq6W/G1l/emW/27mvEniaveclrpugo07E
uP90yotZjlG2VBvdpv1h+9GIcq2VPVYqWWx4Euy/8CEZ8vwTc+OOunhPW36g
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
GEmrrJ0Zo7asU2kTEK0islPJCpokcachZtW4lXzaEoyIHiFMj/JWESbaSlC2
75NR2Sto0RpaS8K6RJSwhpMwicMGkVcjYCxPk2HdPOygYmtKsb+xu7qwMotY
moeNDnfCJwfXFpFbONTEeM9g/+vJ0Z6F6XEUbCCk2G3FDCdm/oFw/cHOber2
Hdso6zr8U9T4S977LeX4HjM+eRWPdt73tOO9X/UprH/rV1+bWFXJzteY/j9V
3x/V4D9L/t8qoX/Xgv9zkf3vo+h/qt6/qr5/1wJAWgUxPkJfqOno7xLm+7D2
fUz3Y8H9GDN/Stu+F71fEgbQPgIZhxQNze6nqPrSKTg1UlPcxTOb8FDPuHaJ
rh3CAxnBgYfHeNtvY5bvRd99UPMlZfqcMf7W8H9IaWPyHSd/Y2thnEeYqVv5
HyOqjALv5y3G2at+1lZVx4rx19mr44wNuJa+tr8Cw8+OLGO6d5b6Vmd76MuD
Yjzm6qh6W0vf1lPtyvmHuetyopl0nWSDl/lgqxy/riQ+nZc/HKW/Xh8DN37X
LH46yb47SL6tJT8e5983sp+a+Yuk864YfFsKfjyIPeb91wnbTdr9kPNcF0KH
Kd9xNnRey7RqyZtq/ON56boYBmhxnPYAPV9VYqf5dj2KSsAIlAAesx59zmdI
OeQZf3uXbY+U4lXsm8TUhFNzXU8/NZI5hzSkYaWdquOU+yAIOoIo79W0970y
CbIBSzPlrIUMbgnFxCOoGZt2AcnGXCfPQDVMPHV1mrII55HXJcxdOmF5bWoI
j3xDXYIKtmcBhBhlHBOwRM6OgrYm2l23KAQugwL4topNZG0vsjdmBJsoBQUn
2MZKiItWHtGn5LiERK8I/PMJVs6WW7oHHBikzoxDGdJyrHyCmb3hkOy5Nby4
U5cN2OM2tRkENuQQY2ZIQ5jWkTC6HbSdueaXAOjdc0v2PGJKUs9N6flpY3uE
Ajl6b26CMd0jXGg/n7o2Owuf3MahFzCjkPEuDHJsGj60sTiFgo9DRnvGhnvH
RrohI10W9lZOz2kaOSXWwpWRdmblZOSUGAf/Y9L6LWX/OW3/EtJ9DGo+Ovk/
J83fQ8qPLv47O+ezT3Kmo30JKv9V8vzVCLexoRr6sxr8s+L/75PE/z3PAn7+
DWS0rLUq244xF0/s/I8556FTfu6W3PjkTZf0OqR/ipmvXJL7oOrOJ7ly8A51
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
0AIPFyAhozR0VUFsyDcDVJSdNNW0C77mfZ+LgS859y/l4Kes59gqDPBWpCQ4
abmfuYlw8NZPA9q6R+OW7bLIS/vb04SlIRDlxsZeQsZeTo63pyMgY52LmCEl
m4RfQk4jOqYQXXBYxyIWtrIAAc+Bw/vg8MHBwZeDAx1w6AR2BrWxPI1fhSEm
O+anx+dnEAjYKAYNn5zsmph8DoN2gjA4Od6PgvVurs7h15fmpkfl1OWjmPMR
8EY2cJkLXWaC50nPgVcP6KKV8d0WwtcZ700GCNh1m/WCdp12n0bMzaDhLGgA
btyKWe9SjpuEA0j6Km4/Cxpr1vYaz7SOU7VLwFs7jdouMgGQBM+rmafW8UOz
dndUuKlELwqhm3q6VUkcJlwZmwjY8lU5Avy57JYfRK2tUvgkYY+qqS75frsu
nJEb1LByfv1h3BrX0b3yPa+GDbw3buInLKJKQFcBAo4YS26ZT7HnFpO9Kjaw
96zPUs3EaqlAPeWvpULlZIiCg3N3sNRVtGAHaxYCPUvsepVKzNnGIoHOdzAj
i2Nd6MFODGRodQ61vYzd28TxyWtqAUvB3veZdVG3LWDVxWyqlNfoMyl1CtE8
HLIw0rkzPaIkrci2Fx1cckLLLzo1OZc2YVWnreqC22QUsTYxsE3k6PLkwMJQ
J27o5crIi83xl8y5Ye3ugp6+qaDh5QyynrevZZEldKKCviMnrShJSzbujpVP
NtA3jLQNI31zETPR39cBmxyCQnonRt+wtnBGIV3BItC3F/BYiJG2dB1QXPgU
YGS88GtbAfWNR3TtUx3r6Tda8pOe/F5P/OzkvnOLD9TUMA1dFq+EaZi96W7v
7lSUOSdfnaBih1XEGR97RbnUn6Sho7tTaQq8yEQniO3yLJrVESDdp6Ttc973
Uznwz3r8azl67ZElJRtcPHR+uoO0DLPziWWzIKHeE+5itnCIZezoAqZ7GvYS
CnkxOf56Yuzl6NDL4cGXM1N9fOIiEOHI8LOB/mfQidfwya5peCcM1gmHD0Gh
A3D4G8zUwDxmanEWvTg3iZsfRUI751ADmKlx6OTg/NzUFGoQMtGBQHTDJjrG
h7tgkz0L2Kn15TkktA87CwMYcJUP3ZUit8XIJSDnpKfq1dUDRsDPF+DLhOs0
4TyN2dpTze0DxwXQbdhYd8qPvZrblBMw82PO/5AP3uaDRz5dySYpWkRFk6Bs
FV/E7De5wF05UU0ELo5r71uH17XkbS1xFLNdVmLXxeBZ2l0FhBB31EKm07T7
wK8OKnYzIETnAzWvPKRhlgL6w6gpa5cAAqlHLYArbEKiRbSbBbnPKY8YuODJ
Jb8edIGCW1n2aeNGvlvBsKr49ULysJBoVrKH5exBNlFKhUGTUHBKxoacvqnj
Eg2CfYOEbVWLNELG8jRkEdK7BOvHQAZX0FD69rKYRhDSifx9kkbMiXodsYA3
7LRE3faATWcU0zVcikUpNCqEM3AIeqhjHQFG2znexqyMiFPvbfgFpKCMYufg
nWx8UEQJq9h6HpWHXxDgsfSVaQoWSpqbIM9ChOsogMomFsGr4kYM4oRRGjdI
YlZNwmnMukwho9IppjtEVCuXoCUvmulr+MWpWeQ4lbA6PtI1Be0xC/dzbg2L
iF6dG8PAemjYoaZ649orPnYr7uLWx7jpKW68DOqOjawbC+tKTbhXb32wUL+6
eGcqvIsyGWLOaFfHCPBO4/a4axchwo1P9L/griJVu6it6R7z5mhkF+FbG62w
p0Nbg471YeFyHxs3cOqWfsl5fjmI/nKY/lwMVXVkAxWKx3YjJl8sTQ+DnB5X
botJsPWl4bkZyOLcyAa2a2P6+cTYs/HhF0ODzwf6nvW9eY6GveFuz2Cm+iYn
X/X1PBsZegGHvYFNdiIQPVDY8NTUCHYeipkeWZxDzGNQ2FnU7PQwCtG5MNOP
gvdOTPRhMBPTqAEotBsBezU50Tk23AUZe4GeHsRhp6bgo6vLWMC0p0nvVS4I
gh4wZyDjetBYBYEu5jhL+1pZ7xEAXb++4FRV3epmxHoO1BgzHTilJwH9Q87z
kPU9laNPheBd1t8MW8sOWcbAzZmEBz5dK+G8zwdbKc9pOf325uLupNKe0Kgk
7o9zd4fZRtRWDVuua4nHWqSZ8dQCuqCaGbOIj+K2ol3iklBTVknBpTiKW7I2
cXvv14QtbuT6NOyYXQ5OZqzilFN5nHIeJeyNmAV0h/Osp+BWxOzKVMhdL6aa
pUQu7M6GvaVEIOW3JryW/x/bTxcA
      "], {{0, 161}, {240, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->Magnification[1],
    ImageSizeRaw->{240, 161},
    PlotRange->{{0, 240}, {0, 161}}], ",", "\"\<PNG\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.707135750296508*^9, 
  3.707135758043119*^9}},ExpressionUUID->"568f652e-ed76-4692-84e1-\
6994efcc9a3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deploy an expression verbatim", "Subchapter",
 CellChangeTimes->{{3.707135717123473*^9, 3.7071357477194777`*^9}, {
  3.707135814949271*^9, 
  3.707135818354783*^9}},ExpressionUUID->"fdd4f7cc-8184-4309-b83c-\
5fb6f3e96886"],

Cell[BoxData[
 RowBox[{"CloudPut", "[", 
  RowBox[{"47", "!"}], "]"}]], "Input",
 CellChangeTimes->{{3.707135807637721*^9, 
  3.7071358244605217`*^9}},ExpressionUUID->"3d6faa09-a181-4f72-8145-\
9407cea7a94b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Delayed", "Title",
 CellChangeTimes->{{3.6836125900821743`*^9, 
  3.683612591673078*^9}},ExpressionUUID->"65c9376f-575a-46de-bf5c-\
dca329146640"],

Cell[CellGroupData[{

Cell["CloudDeploy is not HoldFirst", "Subchapter",
 CellChangeTimes->{{3.70713482912534*^9, 
  3.7071348372832117`*^9}},ExpressionUUID->"4176343e-1bf5-457c-872c-\
c59d88ab486f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "//", "Attributes"}]], "Input",
 CellChangeTimes->{{3.679805155496976*^9, 
  3.679805160999646*^9}},ExpressionUUID->"83eab90d-2dd2-4085-9f24-\
7b3f09b7d583"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Protected", ",", "ReadProtected"}], "}"}]], "Output",
 CellChangeTimes->{
  3.679805161298564*^9},ExpressionUUID->"c308561e-2186-4201-98e7-\
619c0dd1e633"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"RandomReal", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.679805215159655*^9, 
  3.6798052473138323`*^9}},ExpressionUUID->"c9a72e53-fb22-45de-877f-\
56577954b7ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/3f564570-fdc1-4c22-\
97af-8aa09cd9568f\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/3f564570-fdc1-4c22-\
97af-8aa09cd9568f\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/3f564570-fdc1-4c22-97af-\
8aa09cd9568f"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/3f564570-fdc1-4c22-97af-\
8aa09cd9568f"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/3f564570-fdc1-4c22-97af-\
8aa09cd9568f", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/3f564570-fdc1-4c22-97af-8aa09cd9568f"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.679805226826004*^9, 3.679805248985138*^9}, 
   3.6836126557825127`*^9},ExpressionUUID->"454a6d4a-2156-4665-8866-\
b94fd76ca743"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use Delayed to do a computation on the server", "Subchapter",
 CellChangeTimes->{{3.707134867827632*^9, 
  3.7071348753376513`*^9}},ExpressionUUID->"e71b3203-608c-423a-9192-\
80e0913c6e65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{"Delayed", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", "]"}], ",", " ", "\"\<WL\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.679805379519511*^9, 3.679805384736484*^9}, {
  3.707078005474928*^9, 3.707078007530661*^9}, {3.707134908337278*^9, 
  3.707134912159436*^9}},ExpressionUUID->"39cc29f8-0777-4bbf-8801-\
524f22b8d269"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/af3f0328-146c-4bd4-\
9738-c4a2a63cd932\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/af3f0328-146c-4bd4-\
9738-c4a2a63cd932\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/af3f0328-146c-4bd4-9738-\
c4a2a63cd932"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/af3f0328-146c-4bd4-9738-\
c4a2a63cd932"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/af3f0328-146c-4bd4-9738-\
c4a2a63cd932", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/af3f0328-146c-4bd4-9738-c4a2a63cd932"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.679805386360895*^9, 3.683612729588695*^9, {3.707134910131836*^9, 
   3.707134912675436*^9}},ExpressionUUID->"69ad1c4a-709b-402f-90f7-\
b6499296b30f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "@", 
  RowBox[{"Delayed", "[", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"GeoIdentify", "[", "\"\<Country\>\"", "]"}], "]"}], ",", " ", 
    "\"\<WL\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.679805512237269*^9, 3.6798055285211573`*^9}, {
  3.707134886513241*^9, 
  3.707134902137912*^9}},ExpressionUUID->"14290455-a6b4-4017-b472-\
41971164c1ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/f1be93f4-c981-406c-\
bf44-abcbe255b3f6\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/f1be93f4-c981-406c-\
bf44-abcbe255b3f6\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/f1be93f4-c981-406c-bf44-\
abcbe255b3f6"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/f1be93f4-c981-406c-bf44-\
abcbe255b3f6"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/f1be93f4-c981-406c-bf44-\
abcbe255b3f6", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/f1be93f4-c981-406c-bf44-abcbe255b3f6"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.707134890151442*^9, 
  3.707134902629489*^9}},ExpressionUUID->"4ab484ec-30ca-4fde-bc20-\
dd01a9f0ad4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"Delayed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", 
       RowBox[{"Restricted", "[", 
        RowBox[{"\"\<Quantity\>\"", ",", 
         RowBox[{"Last", "[", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"GeoIdentify", "[", "\"\<Country\>\"", "]"}], "]"}], "[", 
           "\"\<CurrencyUnit\>\"", "]"}], "]"}]}], "]"}], "]"}], "[", 
      "\"\<1 eur\>\"", "]"}], ",", " ", "\"\<WL\>\""}], "]"}], ",", " ", 
   RowBox[{"Permissions", " ", "\[Rule]", " ", "\"\<Public\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6798055380599947`*^9, 3.67980569772257*^9}, {
  3.707077123458107*^9, 3.7070771286541777`*^9}, {3.7070771804399967`*^9, 
  3.707077180734888*^9}, {3.707078068338893*^9, 3.7070780719222193`*^9}, {
  3.707078135702538*^9, 3.7070781712014217`*^9}, {3.707134940825466*^9, 
  3.707134961073146*^9}},ExpressionUUID->"a676019a-61ce-451f-a3fc-\
da32a91bf315"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/6f1864e0-336b-45d3-\
8079-4e82853af3dd\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/6f1864e0-336b-45d3-\
8079-4e82853af3dd\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/6f1864e0-336b-45d3-8079-\
4e82853af3dd"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/6f1864e0-336b-45d3-8079-\
4e82853af3dd"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/6f1864e0-336b-45d3-8079-\
4e82853af3dd", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/6f1864e0-336b-45d3-8079-4e82853af3dd"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.6798055472445602`*^9, 3.679805566437928*^9}, {
   3.6798055976468477`*^9, 3.679805641786148*^9}, 3.6798057005655823`*^9, 
   3.68361275880582*^9, {3.7070781634221373`*^9, 3.7070781717415113`*^9}, {
   3.707134944740271*^9, 
   3.707134961933969*^9}},ExpressionUUID->"913e4511-949a-47a8-ae34-\
150ac27d08f2"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["HTTP basics", "Title",
 CellChangeTimes->{{3.707134094950027*^9, 
  3.70713410740361*^9}},ExpressionUUID->"2f02c855-f263-4501-b801-\
9eaa6c372386"],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{
    False->"\<\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\"\>\
", True->
    StyleBox["\<\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\"\
\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"], None},
   ButtonNote->"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"],
  Annotation[#, "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol", 
   "Hyperlink"]& ]], "Output",
 CellChangeTimes->{
  3.707133606394738*^9},ExpressionUUID->"2942f26f-b61f-48af-86cd-\
ad5968089483"],

Cell[CellGroupData[{

Cell["URL Structure", "Subchapter",
 CellChangeTimes->{{3.7071342227668037`*^9, 
  3.707134226029016*^9}},ExpressionUUID->"b550ecc1-21c5-420c-aa63-\
79555d62f6c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLParse", "[", 
  "\"\<https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol?user=1#\
chapter1\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707134227421184*^9, 
  3.7071343162318*^9}},ExpressionUUID->"6d938213-b3c1-4c44-97b5-01ec53e2d2ab"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 5, "InitialType" -> 
        TypeSystem`Struct[{"Scheme", "Domain", "Path", "Query", "Fragment"}, {
          
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            TypeSystem`Atom[String], 3], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Atom[String]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"Scheme"} -> 
           TypeSystem`PackageScope`AtomShape[48.00000000000001], {"Domain"} -> 
           TypeSystem`PackageScope`AtomShape[153.60000000000002`], {"Path"} -> 
           TypeSystem`PackageScope`UnknownShape, {"Query"} -> 
           TypeSystem`PackageScope`UnknownShape, {"Fragment"} -> 
           TypeSystem`PackageScope`AtomShape[76.80000000000001]], 1], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1314890032], 
        "Type" -> TypeSystem`Struct[{
          "Scheme", "Domain", "Path", "Query", "Fragment"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Vector[
            TypeSystem`Atom[String], 3], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Atom[String]}], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1314890032]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Scheme\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Scheme\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][{
                    
                    Key["Scheme"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Scheme"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["https", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Scheme"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Domain\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Domain\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][{
                    
                    Key["Domain"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Domain"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["en.wikipedia.org", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Domain"]]], "Mouse"], 
                ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Path\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Path\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][{
                    
                    Key["Path"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Path"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{"", "wiki", "Hypertext_Transfer_Protocol"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"", "wiki", "Hypertext_Transfer_Protocol"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][{
                    
                    Key["Path"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Path"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Query\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Query\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][{
                    
                    Key["Query"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Query"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{"user" -> "1"}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"user" -> "1"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][{
                    
                    Key["Query"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Query"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Fragment\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fragment\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][{
                    
                    Key["Fragment"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Fragment"]]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["chapter1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
                 
                  GeneralUtilities`Slice[
                   Key["Fragment"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 347528459]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[347528459][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {295., {66.634033203125, 72.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7071359324812813`*^9},ExpressionUUID->"828e8e86-12e5-4c68-a3e3-\
a23700765c80"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample HTTPRequest", "Subchapter",
 CellChangeTimes->{{3.7071343279416323`*^9, 
  3.707134332539694*^9}},ExpressionUUID->"6bf10bef-b0bc-4b36-8224-\
f5d12548d38a"],

Cell["\<\
GET /index.html HTTP/1.1
Host: www.example.com\
\>", "Program",
 CellChangeTimes->{
  3.707134345222187*^9, {3.707134424544373*^9, 
   3.707134426002379*^9}},ExpressionUUID->"eaf3736b-a48f-4c10-b054-\
b6d23d7fe95b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample HTTPResponse", "Subchapter",
 CellChangeTimes->{{3.7071343584034653`*^9, 
  3.707134361545579*^9}},ExpressionUUID->"23463a51-aa84-42f6-8a6e-\
a2e7b0e9a822"],

Cell["\<\
HTTP/1.1 200 OK
Date: Mon, 23 May 2005 22:38:34 GMT
Content-Type: text/html; charset=UTF-8
Content-Encoding: UTF-8
Content-Length: 138
Last-Modified: Wed, 08 Jan 2003 23:11:55 GMT
Server: Apache/1.3.3.7 (Unix) (Red-Hat/Linux)
ETag: \"3f80f-1b6-3e1cb03b\"
Accept-Ranges: bytes
Connection: close

<html>
<head>
  <title>An Example Page</title>
</head>
<body>
  Hello World, this is a very simple HTML document.
</body>
</html>\
\>", "Program",
 CellChangeTimes->{{3.707134362671002*^9, 
  3.707134415346332*^9}},ExpressionUUID->"f478ac1c-8486-4e64-96ab-\
c40a6bac482d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HTTPResponse", "Title",
 CellChangeTimes->{{3.707134632389921*^9, 3.7071346383000383`*^9}, {
  3.707134721907301*^9, 
  3.7071347236482897`*^9}},ExpressionUUID->"b31e9d5f-31f7-45e6-b566-\
48c9a81b2a76"],

Cell[CellGroupData[{

Cell["Return a plain HTTPResponse", "Subchapter",
 CellChangeTimes->{{3.707078569609414*^9, 
  3.707078573855749*^9}},ExpressionUUID->"ce21d87e-86e0-4169-97ac-\
40176e1199f7"],

Cell[BoxData[
 RowBox[{"CloudDeploy", " ", "@", " ", 
  RowBox[{"Delayed", "[", 
   RowBox[{"HTTPResponse", "[", "\"\<Hello <strong>world</strong>\>\"", "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.707078523197413*^9, 
  3.707078534157856*^9}},ExpressionUUID->"02f069c2-c8cf-4c04-bba1-\
43e4f88cdd8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Return arbitrary body and content type :", "Subchapter",
 CellChangeTimes->{{3.707078556610386*^9, 
  3.70707855835452*^9}},ExpressionUUID->"4c3f33f8-ce95-45d9-a231-\
d8b4ab5ecaa5"],

Cell[BoxData[
 RowBox[{"CloudDeploy", " ", "@", " ", 
  RowBox[{"Delayed", "[", "\[IndentingNewLine]", 
   RowBox[{"HTTPResponse", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ExportString", "[", 
      RowBox[{
       RowBox[{"ExampleData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<TestImage\>\"", ",", "\"\<Aerial\>\""}], "}"}], "]"}], 
       ",", " ", "\"\<PNG\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
      "\"\<ContentType\>\"", " ", "\[Rule]", " ", "\"\<image/png\>\""}], 
      "|>"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"0c22912e-549d-4644-a994-1fef2766016f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding arbitrary headers:", "Subchapter",
 CellChangeTimes->{{3.707078556610386*^9, 
  3.7070785889746237`*^9}},ExpressionUUID->"245bb361-aff8-4b79-b4d6-\
2c08e9f68641"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", " ", "@", " ", 
  RowBox[{"Delayed", "[", "\[IndentingNewLine]", 
   RowBox[{"HTTPResponse", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ExportString", "[", 
      RowBox[{
       RowBox[{"ExampleData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<TestImage\>\"", ",", "\"\<Aerial\>\""}], "}"}], "]"}], 
       ",", " ", "\"\<PNG\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{
       "\"\<ContentType\>\"", " ", "\[Rule]", " ", "\"\<image/png\>\""}], ",",
        " ", 
       RowBox[{"\"\<Headers\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Content-Disposition\>\"", " ", "\[Rule]", " ", 
          "\"\<attachment; filename=filename.jpg\>\""}], "}"}]}]}], "|>"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.707078596480268*^9, 
  3.707078636065537*^9}},ExpressionUUID->"45684bca-2a29-465c-b019-\
18b90fa658a1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/c6bc43f0-779d-435c-\
a541-2dbb0624089a\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/c6bc43f0-779d-435c-\
a541-2dbb0624089a\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/c6bc43f0-779d-435c-a541-\
2dbb0624089a"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/c6bc43f0-779d-435c-a541-\
2dbb0624089a"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/c6bc43f0-779d-435c-a541-\
2dbb0624089a", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/c6bc43f0-779d-435c-a541-2dbb0624089a"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.707078638781048*^9},ExpressionUUID->"e3cafb12-7f5c-44e1-b8ba-\
4fdfd933da17"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using templates", "Subchapter",
 CellChangeTimes->{{3.707134458108328*^9, 
  3.707134460538513*^9}},ExpressionUUID->"30ece8a5-a541-4edf-bb47-\
cf901f542434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", " ", "@", " ", 
  RowBox[{"Delayed", " ", "@", " ", 
   RowBox[{"HTTPResponse", "@", 
    RowBox[{"TemplateApply", "[", 
     RowBox[{
      RowBox[{
      "XMLTemplate", "[", 
       "\"\<<strong><wolfram:slot id='title'/></strong><span><wolfram:slot \
id='content'/></span>\>\"", "]"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<title\>\"", " ", "\[Rule]", "\"\<Hello\>\""}], ",", " ", 
        
        RowBox[{"\"\<content\>\"", " ", "\[Rule]", " ", "\"\<World\>\""}]}], 
       "|>"}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7071344622815*^9, 
  3.707134613197844*^9}},ExpressionUUID->"404e0bce-fded-4e55-a207-\
f2b13cab3057"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/32ff9ecc-5535-4a27-\
823f-bb101e12c359\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/32ff9ecc-5535-4a27-\
823f-bb101e12c359\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/32ff9ecc-5535-4a27-823f-\
bb101e12c359"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/32ff9ecc-5535-4a27-823f-\
bb101e12c359"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/32ff9ecc-5535-4a27-823f-\
bb101e12c359", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/32ff9ecc-5535-4a27-823f-bb101e12c359"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.707134490279683*^9, 3.707134530756918*^9}, {
  3.7071345893207684`*^9, 
  3.707134613771902*^9}},ExpressionUUID->"3fafebdb-03b3-4fbf-853d-\
1bf2aed68a89"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FormFunction", "Title",
 CellChangeTimes->{{3.6836128069492702`*^9, 
  3.683612810020876*^9}},ExpressionUUID->"c035c66d-2bba-4ebe-a009-\
f756cf543621"],

Cell[CellGroupData[{

Cell["Ask the user for input and return a result", "Subchapter",
 CellChangeTimes->{{3.7071350422426167`*^9, 
  3.707135060053639*^9}},ExpressionUUID->"523ac8c1-025a-4830-9f7d-\
3943f0275e55"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "@", 
  RowBox[{"FormFunction", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<currency\>\"", " ", "\[Rule]", " ", "\"\<CurrencyName\>\""}],
     ",", " ", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"UnitConvert", "[", 
       RowBox[{
        RowBox[{"Quantity", "[", 
         RowBox[{"1", ",", " ", "\"\<USDollars\>\""}], "]"}], ",", " ", 
        "#currency"}], "]"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.67980599279315*^9, 3.679806104162978*^9}, {
  3.707078185274747*^9, 3.707078189992343*^9}, {3.707135014632204*^9, 
  3.707135025142664*^9}},ExpressionUUID->"b8ddb212-ff40-48b0-adcf-\
a5f7a8313150"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multistep forms", "Subchapter",
 CellChangeTimes->{{3.707135102595969*^9, 
  3.707135105490234*^9}},ExpressionUUID->"7199ff9c-a69f-4b74-ac94-\
f5dbc86fc254"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "@", 
  RowBox[{"FormFunction", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<rooms\>\"", " ", ",", "\"\<number of rooms\>\""}], "}"}],
        " ", "\[Rule]", " ", "\"\<Integer\>\""}], "}"}], ",", " ", 
     RowBox[{"Function", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<room\>\"", " ", "<>", " ", 
            RowBox[{"ToString", "[", "i", "]"}]}], ",", " ", 
           RowBox[{"\"\<guests in room\>\"", " ", "<>", " ", 
            RowBox[{"ToString", "[", "i", "]"}]}]}], "}"}], " ", "\[Rule]", 
         " ", "\"\<Integer\>\""}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "#rooms"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707135080092792*^9, 3.707135100147808*^9}, {
  3.707135150445863*^9, 
  3.707135151835606*^9}},ExpressionUUID->"fd907d34-b149-44bd-81f9-\
0c34ed200e19"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Form with RepeatingElement", "Subchapter",
 CellChangeTimes->{{3.707135166195691*^9, 
  3.707135179552245*^9}},ExpressionUUID->"64e97948-96c8-4835-b229-\
063a217af6f8"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "@", 
  RowBox[{"FormFunction", "[", 
   RowBox[{"\"\<field\>\"", " ", "\[Rule]", " ", 
    RowBox[{"RepeatingElement", "[", "\"\<String\>\"", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707135221606846*^9, 
  3.707135224518882*^9}},ExpressionUUID->"a5fa09ac-7ed1-4941-96f0-\
480924a8fc3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing Locally", "Subchapter",
 CellChangeTimes->{{3.70713511209779*^9, 
  3.7071351147454576`*^9}},ExpressionUUID->"3b2fd407-d1eb-40c2-9d92-\
786f7a2e6b99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FormFunction", "[", 
   RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<Number\>\""}], "]"}], "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "2"}], "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.707135119324129*^9, 
  3.7071351311766977`*^9}},ExpressionUUID->"0c40c925-b03c-41ab-a0ea-\
2427395cb519"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FormFunction", "[", 
   RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<Number\>\""}], "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7071351459977922`*^9, 
  3.7071351460441093`*^9}},ExpressionUUID->"81998897-d726-44d4-aeb3-\
537afb598add"]
}, Open  ]],

Cell[CellGroupData[{

Cell["FormObject", "Subchapter",
 CellChangeTimes->{{3.707135341348822*^9, 
  3.707135343292688*^9}},ExpressionUUID->"a6a22ebe-746d-4e5a-ad41-\
23e45fbe6f40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FormObject", "[", 
   RowBox[{"<|", 
    RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<CurrencyName\>\""}], 
    "|>"}], "]"}], "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<euro\>\""}], "|>"}], 
  "]"}]], "Input",ExpressionUUID->"cc303306-20b7-45ef-956d-81f8d0fe8660"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormObject", "[", 
    RowBox[{"<|", 
     RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<CurrencyName\>\""}], 
     "|>"}], "]"}], "[", 
   RowBox[{"<|", 
    RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<euro\>\""}], "|>"}], "]"}],
   " ", "//", " ", "Setting"}]], "Input",
 CellChangeTimes->{{3.707135359805278*^9, 
  3.707135362085183*^9}},ExpressionUUID->"4b7998a3-4455-4406-838d-\
0311ebdda364"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["APIFunction", "Title",
 CellChangeTimes->{{3.683612901626123*^9, 
  3.683612902972671*^9}},ExpressionUUID->"d27515c4-e1a7-4509-a5b5-\
c531fce772da"],

Cell[CellGroupData[{

Cell["Deploy an api", "Subchapter",
 CellChangeTimes->{{3.707135274338492*^9, 
  3.707135276504982*^9}},ExpressionUUID->"402812cc-f54a-4186-b38d-\
a573ffc7fbbe"],

Cell[BoxData[
 RowBox[{"obj", " ", "=", " ", 
  RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<currency\>\"", " ", "\[Rule]", " ", "\"\<CurrencyName\>\""}],
     ",", " ", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"UnitConvert", "[", 
       RowBox[{
        RowBox[{"Quantity", "[", 
         RowBox[{"1", ",", " ", "\"\<USDollars\>\""}], "]"}], ",", " ", 
        "#currency"}], "]"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707135266659748*^9, 
  3.707135298626953*^9}},ExpressionUUID->"49abbf6b-02c5-42da-bfc1-\
fb3d5865c598"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Call the API", "Subchapter",
 CellChangeTimes->{{3.707135301122123*^9, 
  3.7071353026902447`*^9}},ExpressionUUID->"d620d1ae-712c-465e-bfdd-\
973f27dd9adc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", 
  RowBox[{"obj", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<currency\>\"", " ", "\[Rule]", " ", "\"\<eur\>\""}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.679806322291157*^9, 3.679806335775716*^9}, 
   3.6836130248656*^9, {3.707078247802773*^9, 3.707078248048571*^9}, {
   3.7071353091961517`*^9, 
   3.707135309474156*^9}},ExpressionUUID->"a392cae9-5f22-4630-abc9-\
14fb1aa36190"],

Cell[BoxData[
 TemplateBox[{InterpretationBox[
    TagBox[
     InterpretationBox["\"0.90\"", 0.8954956568460642, AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 0.8954956568460642, Selectable -> False],RowBox[{
     FormBox["\"\[Euro]\"", TraditionalForm], "\[VeryThinSpace]"}],"euros",
   "\"Euros\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{
  3.679806337630011*^9, 3.683613026690761*^9, {3.7070782523370028`*^9, 
   3.707078309756091*^9}},ExpressionUUID->"e32726c4-8efd-45a9-8535-\
19f310b82948"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Choose an ExportForm", "Subchapter",
 CellChangeTimes->{{3.707135376180092*^9, 
  3.707135379450224*^9}},ExpressionUUID->"a8d5c2c9-09f5-4572-bddb-\
fa2b9b4ce2e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "@", 
  RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<currency\>\"", " ", "\[Rule]", " ", "\"\<CurrencyName\>\""}],
     ",", " ", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"UnitConvert", "[", 
       RowBox[{
        RowBox[{"Quantity", "[", 
         RowBox[{"1", ",", " ", "\"\<USDollars\>\""}], "]"}], ",", " ", 
        "#currency"}], "]"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
    "\"\<WL\>\""}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.707135383979804*^9, 
  3.7071354024333067`*^9}},ExpressionUUID->"95c96e81-69b8-4052-9eb6-\
1d765993cc48"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/04ff27ff-23e0-4791-\
875e-26f98123ef25\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/04ff27ff-23e0-4791-\
875e-26f98123ef25\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/04ff27ff-23e0-4791-875e-\
26f98123ef25"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/04ff27ff-23e0-4791-875e-\
26f98123ef25"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/04ff27ff-23e0-4791-875e-\
26f98123ef25", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/04ff27ff-23e0-4791-875e-26f98123ef25"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.7071353878143597`*^9, 
  3.7071354029801407`*^9}},ExpressionUUID->"18e72d1e-184b-4631-800f-\
a17ce77de86c"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["URLDispatcher", "Title",
 CellChangeTimes->{{3.683612901626123*^9, 3.683612902972671*^9}, {
  3.707135425872868*^9, 
  3.707135427958618*^9}},ExpressionUUID->"12f6aa8c-c278-49b9-9699-\
fea23f708c5a"],

Cell[CellGroupData[{

Cell["Create simple URL Router", "Subchapter",
 CellChangeTimes->{{3.707135433736431*^9, 
  3.707135438549987*^9}},ExpressionUUID->"2b70accb-f9d5-4d20-9ad0-\
59a5bf3dada1"],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"URLDispatcher", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\</api\>\"", " ", "\[Rule]", " ", 
       RowBox[{"APIFunction", "[", 
        RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<String\>\""}], "]"}]}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"\"\</form\>\"", " ", "\[Rule]", " ", 
       RowBox[{"FormFunction", "[", 
        RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<String\>\""}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", "\"\<application\>\""}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"bcb9f923-1586-4e6a-bb46-6159098d8447"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use also string patterns", "Subchapter",
 CellChangeTimes->{{3.707135450814736*^9, 
  3.7071354594044037`*^9}},ExpressionUUID->"46967bb9-1be1-482e-ba0f-\
53dfbb7d5f09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", " ", "=", " ", 
   RowBox[{"CloudDeploy", "[", 
    RowBox[{"URLDispatcher", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\</\>\"", " ", "~~", " ", 
        RowBox[{"base", ":", 
         RowBox[{"Repeated", "[", 
          RowBox[{"DigitCharacter", ",", " ", "3"}], "]"}]}], " ", "~~", 
        "\"\<^\>\"", "~~", 
        RowBox[{"power", ":", 
         RowBox[{"Repeated", "[", 
          RowBox[{"DigitCharacter", ",", " ", "3"}], "]"}]}]}], "  ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"ExportForm", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FromDigits", "[", "base", "]"}], "^", 
          RowBox[{"FromDigits", "[", "power", "]"}]}], ",", " ", 
         "\"\<WL\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7070784626322803`*^9, 
  3.707078493076701*^9}},ExpressionUUID->"0ce25660-9977-4efd-87ee-\
c7ef03288f52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLRead", "[", 
  RowBox[{
   RowBox[{"CloudObject", "[", 
    RowBox[{
     RowBox[{"First", "[", "obj", "]"}], "<>", " ", "\"\</12^56\>\""}], "]"}],
    ",", " ", "\"\<Body\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.707078486612937*^9, 
  3.707078486966444*^9}},ExpressionUUID->"338a7005-f961-44ca-a368-\
39ae181f3eb2"],

Cell[BoxData["\<\"\
2717376270889601918875979639080849756517127883888251440726016\"\>"], "Output",\

 CellChangeTimes->{{3.707078487718912*^9, 
  3.707078495285987*^9}},ExpressionUUID->"54978368-bcb8-4639-80e0-\
47c1d369f7e6"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GenerateHTTPResponse", "Title",
 CellChangeTimes->{{3.683612901626123*^9, 3.683612902972671*^9}, {
  3.707078357335841*^9, 3.7070783601338654`*^9}, {3.707078675390003*^9, 
  3.707078678660089*^9}},ExpressionUUID->"5012292b-789f-4d7b-b3cf-\
9cf6ed05c47a"],

Cell[CellGroupData[{

Cell["Simulate the response locally", "Subchapter",
 CellChangeTimes->{{3.707078569609414*^9, 3.707078573855749*^9}, 
   3.7070787213334103`*^9, {3.707135492583712*^9, 
   3.707135497541027*^9}},ExpressionUUID->"81c71e23-d60e-434d-80e1-\
527731a65271"],

Cell[BoxData[
 RowBox[{"GenerateHTTPResponse", "[", 
  RowBox[{"Delayed", "[", 
   RowBox[{
    RowBox[{"2", "+", "2"}], ",", "\"\<WL\>\""}], "]"}], "]"}]], "Input",Expre\
ssionUUID->"25cc3728-24fb-4b50-8a1e-70b59fe94795"],

Cell[BoxData[
 RowBox[{"GenerateHTTPResponse", "[", 
  RowBox[{"HTTPResponse", "[", 
   RowBox[{
    RowBox[{"ExportForm", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<Error\>\"", " ", "\[Rule]", " ", "True"}], "|>"}], ",", 
      " ", "\"\<JSON\>\""}], "]"}], ",", " ", 
    RowBox[{"<|", 
     RowBox[{"\"\<StatusCode\>\"", " ", "\[Rule]", " ", "500"}], "|>"}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.707078750159934*^9},ExpressionUUID->"cc1040a1-43d0-4ee3-a3bf-\
c20cd4fe9778"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set the detail of the response using the second arg", "Subchapter",
 CellChangeTimes->{
  3.707078782036447*^9, {3.7071355272785683`*^9, 
   3.7071355352603273`*^9}},ExpressionUUID->"e88cbf3b-33d5-43cf-b196-\
8aa3bd451d95"],

Cell[BoxData[
 RowBox[{"GenerateHTTPResponse", "[", 
  RowBox[{
   RowBox[{"APIFunction", "[", 
    RowBox[{
     RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<Number\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"#x", "^", "2"}], "&"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Query\>\"", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<2\>\""}], "}"}]}], 
    "}"}]}], "]"}]], "Input",ExpressionUUID->"f79d8280-4514-4a19-9361-\
97c6b5fab69f"],

Cell[BoxData[
 RowBox[{"GenerateHTTPResponse", "[", 
  RowBox[{
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<Number\>\""}], ",", " ", 
     RowBox[{
      RowBox[{"#x", "^", "2"}], "&"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Method\>\"", " ", "\[Rule]", " ", "\"\<POST\>\""}], ",", 
     " ", 
     RowBox[{"\"\<FormRules\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", " ", "\[Rule]", " ", "\"\<2\>\""}], "}"}]}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7071355384224653`*^9, 
  3.707135555563469*^9}},ExpressionUUID->"6fb2b664-b522-43ed-8735-\
a1a0f04505bb"]
}, Open  ]]
}, Closed]]
},
WindowSize->{808, 756},
WindowMargins->{{174, Automatic}, {44, Automatic}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 3, 92, "Title", "ExpressionUUID" -> \
"2bae174d-9e35-4688-b14f-b8e2aa248c0d"],
Cell[CellGroupData[{
Cell[759, 29, 170, 3, 63, "Subchapter", "ExpressionUUID" -> \
"517f7ef2-103c-4640-8a67-7ae12fc61efc"],
Cell[932, 34, 186, 3, 32, "Input", "ExpressionUUID" -> \
"7b42d1af-e04d-47f8-ad04-610f2ffad2c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155, 42, 165, 3, 63, "Subchapter", "ExpressionUUID" -> \
"ccae1eb8-39c3-4f0e-89e6-5152227c0cc0"],
Cell[1323, 47, 309, 8, 32, "Input", "ExpressionUUID" -> \
"cfbfc038-590b-4d06-bc54-d9300b0d7eb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1669, 60, 167, 3, 63, "Subchapter", "ExpressionUUID" -> \
"4d9e24e8-988a-4295-86b6-d3af78455cc0"],
Cell[1839, 65, 399, 11, 32, "Input", "ExpressionUUID" -> \
"f1ed8a43-9013-44cb-8e7f-ef841248ace4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2275, 81, 163, 3, 63, "Subchapter", "ExpressionUUID" -> \
"e1a56e71-5b13-4a9e-8653-090b6c1d63bb"],
Cell[2441, 86, 1006, 27, 96, "Input", "ExpressionUUID" -> \
"3566f5c8-6d5d-461e-ac5c-4d9c318a1711"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3484, 118, 171, 3, 63, "Subchapter", "ExpressionUUID" -> \
"d6619ae2-59f7-4bb9-b05b-5e85bfad03c9"],
Cell[3658, 123, 132211, 2174, 178, "Input", "ExpressionUUID" -> \
"568f652e-ed76-4692-84e1-6994efcc9a3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135906, 2302, 228, 4, 63, "Subchapter", "ExpressionUUID" -> \
"fdd4f7cc-8184-4309-b83c-5fb6f3e96886"],
Cell[136137, 2308, 208, 5, 32, "Input", "ExpressionUUID" -> \
"3d6faa09-a181-4f72-8145-9407cea7a94b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[136394, 2319, 152, 3, 66, "Title", "ExpressionUUID" -> \
"65c9376f-575a-46de-bf5c-dca329146640"],
Cell[CellGroupData[{
Cell[136571, 2326, 177, 3, 63, "Subchapter", "ExpressionUUID" -> \
"4176343e-1bf5-457c-872c-c59d88ab486f"],
Cell[CellGroupData[{
Cell[136773, 2333, 195, 4, 32, "Input", "ExpressionUUID" -> \
"83eab90d-2dd2-4085-9f24-7b3f09b7d583"],
Cell[136971, 2339, 195, 5, 32, "Output", "ExpressionUUID" -> \
"c308561e-2186-4201-98e7-619c0dd1e633"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137203, 2349, 224, 5, 32, "Input", "ExpressionUUID" -> \
"c9a72e53-fb22-45de-877f-56577954b7ef"],
Cell[137430, 2356, 1142, 30, 35, "Output", "ExpressionUUID" -> \
"454a6d4a-2156-4665-8866-b94fd76ca743"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138621, 2392, 195, 3, 63, "Subchapter", "ExpressionUUID" -> \
"e71b3203-608c-423a-9192-80e0913c6e65"],
Cell[CellGroupData[{
Cell[138841, 2399, 394, 9, 32, "Input", "ExpressionUUID" -> \
"39cc29f8-0777-4bbf-8801-524f22b8d269"],
Cell[139238, 2410, 1165, 31, 35, "Output", "ExpressionUUID" -> \
"69ad1c4a-709b-402f-90f7-b6499296b30f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140440, 2446, 402, 10, 32, "Input", "ExpressionUUID" -> \
"14290455-a6b4-4017-b472-41971164c1ef"],
Cell[140845, 2458, 1117, 30, 35, "Output", "ExpressionUUID" -> \
"4ab484ec-30ca-4fde-bc20-dd01a9f0ad4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141999, 2493, 992, 22, 117, "Input", "ExpressionUUID" -> \
"a676019a-61ce-451f-a3fc-da32a91bf315"],
Cell[142994, 2517, 1321, 33, 35, "Output", "ExpressionUUID" -> \
"913e4511-949a-47a8-ae34-150ac27d08f2"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[144376, 2557, 153, 3, 66, "Title", "ExpressionUUID" -> \
"2f02c855-f263-4501-b801-9eaa6c372386"],
Cell[144532, 2562, 780, 20, 34, "Output", "ExpressionUUID" -> \
"2942f26f-b61f-48af-86cd-ad5968089483"],
Cell[CellGroupData[{
Cell[145337, 2586, 163, 3, 63, "Subchapter", "ExpressionUUID" -> \
"b550ecc1-21c5-420c-aa63-79555d62f6c4"],
Cell[CellGroupData[{
Cell[145525, 2593, 268, 5, 32, "Input", "ExpressionUUID" -> \
"6d938213-b3c1-4c44-97b5-01ec53e2d2ab"],
Cell[145796, 2600, 20458, 405, 157, "Output", "ExpressionUUID" -> \
"828e8e86-12e5-4c68-a3e3-a23700765c80"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166303, 3011, 168, 3, 63, "Subchapter", "ExpressionUUID" -> \
"6bf10bef-b0bc-4b36-8224-f5d12548d38a"],
Cell[166474, 3016, 225, 7, 67, "Program", "ExpressionUUID" -> \
"eaf3736b-a48f-4c10-b054-b6d23d7fe95b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166736, 3028, 169, 3, 63, "Subchapter", "ExpressionUUID" -> \
"23463a51-aa84-42f6-8a6e-a2e7b0e9a822"],
Cell[166908, 3033, 577, 23, 356, "Program", "ExpressionUUID" -> \
"f478ac1c-8486-4e64-96ab-c40a6bac482d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167534, 3062, 208, 4, 92, "Title", "ExpressionUUID" -> \
"b31e9d5f-31f7-45e6-b566-48c9a81b2a76"],
Cell[CellGroupData[{
Cell[167767, 3070, 175, 3, 63, "Subchapter", "ExpressionUUID" -> \
"ce21d87e-86e0-4169-97ac-40176e1199f7"],
Cell[167945, 3075, 308, 7, 32, "Input", "ExpressionUUID" -> \
"02f069c2-c8cf-4c04-bba1-43e4f88cdd8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168290, 3087, 187, 3, 63, "Subchapter", "ExpressionUUID" -> \
"4c3f33f8-ce95-45d9-a231-d8b4ab5ecaa5"],
Cell[168480, 3092, 684, 15, 138, "Input", "ExpressionUUID" -> \
"0c22912e-549d-4644-a994-1fef2766016f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169201, 3112, 175, 3, 63, "Subchapter", "ExpressionUUID" -> \
"245bb361-aff8-4b79-b4d6-2c08e9f68641"],
Cell[CellGroupData[{
Cell[169401, 3119, 1011, 24, 159, "Input", "ExpressionUUID" -> \
"45684bca-2a29-465c-b019-18b90fa658a1"],
Cell[170415, 3145, 1093, 30, 35, "Output", "ExpressionUUID" -> \
"e3cafb12-7f5c-44e1-b8ba-4fdfd933da17"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171557, 3181, 163, 3, 63, "Subchapter", "ExpressionUUID" -> \
"30ece8a5-a541-4edf-bb47-cf901f542434"],
Cell[CellGroupData[{
Cell[171745, 3188, 750, 18, 201, "Input", "ExpressionUUID" -> \
"404e0bce-fded-4e55-a207-f2b13cab3057"],
Cell[172498, 3208, 1168, 31, 35, "Output", "ExpressionUUID" -> \
"3fafebdb-03b3-4fbf-853d-1bf2aed68a89"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[173727, 3246, 157, 3, 66, "Title", "ExpressionUUID" -> \
"c035c66d-2bba-4ebe-a009-f756cf543621"],
Cell[CellGroupData[{
Cell[173909, 3253, 192, 3, 63, "Subchapter", "ExpressionUUID" -> \
"523ac8c1-025a-4830-9f7d-3943f0275e55"],
Cell[174104, 3258, 728, 17, 96, "Input", "ExpressionUUID" -> \
"b8ddb212-ff40-48b0-adcf-a5f7a8313150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174869, 3280, 163, 3, 63, "Subchapter", "ExpressionUUID" -> \
"7199ff9c-a69f-4b74-ac94-f5dbc86fc254"],
Cell[175035, 3285, 1037, 27, 96, "Input", "ExpressionUUID" -> \
"fd907d34-b149-44bd-81f9-0c34ed200e19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176109, 3317, 174, 3, 63, "Subchapter", "ExpressionUUID" -> \
"64e97948-96c8-4835-b229-063a217af6f8"],
Cell[176286, 3322, 338, 8, 32, "Input", "ExpressionUUID" -> \
"a5fa09ac-7ed1-4941-96f0-480924a8fc3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176661, 3335, 164, 3, 63, "Subchapter", "ExpressionUUID" -> \
"3b2fd407-d1eb-40c2-9d92-786f7a2e6b99"],
Cell[176828, 3340, 355, 8, 32, "Input", "ExpressionUUID" -> \
"0c40c925-b03c-41ab-a0ea-2427395cb519"],
Cell[177186, 3350, 282, 7, 32, "Input", "ExpressionUUID" -> \
"81998897-d726-44d4-aeb3-537afb598add"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177505, 3362, 158, 3, 63, "Subchapter", "ExpressionUUID" -> \
"a6a22ebe-746d-4e5a-ad41-23e45fbe6f40"],
Cell[177666, 3367, 332, 8, 32, "Input", "ExpressionUUID" -> \
"cc303306-20b7-45ef-956d-81f8d0fe8660"],
Cell[178001, 3377, 449, 12, 32, "Input", "ExpressionUUID" -> \
"4b7998a3-4455-4406-838d-0311ebdda364"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[178499, 3395, 154, 3, 66, "Title", "ExpressionUUID" -> \
"d27515c4-e1a7-4509-a5b5-c531fce772da"],
Cell[CellGroupData[{
Cell[178678, 3402, 161, 3, 63, "Subchapter", "ExpressionUUID" -> \
"402812cc-f54a-4186-b38d-a573ffc7fbbe"],
Cell[178842, 3407, 635, 16, 96, "Input", "ExpressionUUID" -> \
"49abbf6b-02c5-42da-bfc1-fb3d5865c598"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179514, 3428, 162, 3, 63, "Subchapter", "ExpressionUUID" -> \
"d620d1ae-712c-465e-bfdd-973f27dd9adc"],
Cell[CellGroupData[{
Cell[179701, 3435, 435, 10, 32, "Input", "ExpressionUUID" -> \
"a392cae9-5f22-4630-abc9-14fb1aa36190"],
Cell[180139, 3447, 583, 12, 34, "Output", "ExpressionUUID" -> \
"e32726c4-8efd-45a9-8535-19f310b82948"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180771, 3465, 168, 3, 63, "Subchapter", "ExpressionUUID" -> \
"a8d5c2c9-09f5-4572-bddb-fa2b9b4ce2e8"],
Cell[CellGroupData[{
Cell[180964, 3472, 678, 16, 117, "Input", "ExpressionUUID" -> \
"95c96e81-69b8-4052-9eb6-1d765993cc48"],
Cell[181645, 3490, 1121, 30, 35, "Output", "ExpressionUUID" -> \
"18e72d1e-184b-4631-800f-a17ce77de86c"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[182827, 3527, 205, 4, 66, "Title", "ExpressionUUID" -> \
"12f6aa8c-c278-49b9-9699-fea23f708c5a"],
Cell[CellGroupData[{
Cell[183057, 3535, 172, 3, 63, "Subchapter", "ExpressionUUID" -> \
"2b70accb-f9d5-4d20-9ad0-59a5bf3dada1"],
Cell[183232, 3540, 718, 15, 138, "Input", "ExpressionUUID" -> \
"bcb9f923-1586-4e6a-bb46-6159098d8447"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183987, 3560, 174, 3, 63, "Subchapter", "ExpressionUUID" -> \
"46967bb9-1be1-482e-ba0f-53dfbb7d5f09"],
Cell[184164, 3565, 984, 25, 117, "Input", "ExpressionUUID" -> \
"0ce25660-9977-4efd-87ee-c7ef03288f52"],
Cell[CellGroupData[{
Cell[185173, 3594, 349, 9, 32, "Input", "ExpressionUUID" -> \
"338a7005-f961-44ca-a368-39ae181f3eb2"],
Cell[185525, 3605, 226, 5, 32, "Output", "ExpressionUUID" -> \
"54978368-bcb8-4639-80e0-47c1d369f7e6"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[185812, 3617, 260, 4, 66, "Title", "ExpressionUUID" -> \
"5012292b-789f-4d7b-b3cf-9cf6ed05c47a"],
Cell[CellGroupData[{
Cell[186097, 3625, 252, 4, 63, "Subchapter", "ExpressionUUID" -> \
"81c71e23-d60e-434d-80e1-527731a65271"],
Cell[186352, 3631, 222, 5, 32, "Input", "ExpressionUUID" -> \
"25cc3728-24fb-4b50-8a1e-70b59fe94795"],
Cell[186577, 3638, 511, 14, 54, "Input", "ExpressionUUID" -> \
"cc1040a1-43d0-4ee3-a3bf-c20cd4fe9778"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187125, 3657, 229, 4, 63, "Subchapter", "ExpressionUUID" -> \
"e88cbf3b-33d5-43cf-b196-8aa3bd451d95"],
Cell[187357, 3663, 506, 13, 32, "Input", "ExpressionUUID" -> \
"f79d8280-4514-4a19-9361-97c6b5fab69f"],
Cell[187866, 3678, 687, 18, 54, "Input", "ExpressionUUID" -> \
"6fb2b664-b522-43ed-8735-a1a0f04505bb"]
}, Open  ]]
}, Closed]]
}
]
*)

